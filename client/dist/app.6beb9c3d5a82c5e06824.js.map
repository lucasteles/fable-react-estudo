{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/.fable/Feliz.1.17.0/Interop.fs.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Int32.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/lib/long.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Long.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Util.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Date.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/lib/big.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Types.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Decimal.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/RegExp.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/String.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Option.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Seq.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Reflection.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Array.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/List.js","webpack:///./src/.fable/Feliz.Bulma.2.5.0/ElementBuilders.fs.js","webpack:///./src/.fable/Fable.Promise.2.1.0/Promise.fs.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/AsyncBuilder.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Async.js","webpack:///./src/.fable/Fable.SimpleHttp.3.0.0/Types.fs.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/FSharp.Collections.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/System.Text.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/FSharp.Core.js","webpack:///./src/.fable/fable-library.3.0.0-nagareyama-rc-007/Map.js","webpack:///./src/.fable/Fable.SimpleHttp.3.0.0/Http.fs.js","webpack:///./src/Types.fs.js","webpack:///./src/Api.fs.js","webpack:///./src/.fable/Feliz.1.17.0/React.fs.js","webpack:///./src/.fable/Feliz.1.17.0/ReactInterop.js","webpack:///./src/ProfilePage.fs.js","webpack:///./src/LoginPage.fs.js","webpack:///./src/Components.fs.js","webpack:///./src/Main.fs.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","reactApi","react","reactElement","createElement_1","mkAttr","NumberStyles","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","unsigned","this","isLong","obj","GetHashCode","h1","Equals","x","equals","CompareTo","compare","toString","radix","toJSON","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","str","Error","RangeError","indexOf","substring","radixToPower","size","min","parseInt","add","multiply","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","digits","isOdd","other","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","res","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","LongLib","op_Multiply","fromBytes","bytes","le","fromBytesLE","fromBytesBE","toBytes","hi","lo","toBytesLE","toBytesBE","isArrayLike","Array","isArray","ArrayBuffer","isView","isHashable","sameConstructor","y","getPrototypeOf","constructor","padWithZeros","dateOffset","date","date1","offset","kind","getTimezoneOffset","ObjectRef","idMap","has","set","count","WeakMap","stringHash","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h2","structuralHash","Date","getTime","values","self","map","v","String","equalArraysWith","eq","equalArrays","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","compareArrays","comp","compareArraysWith","isComparable","compareObjects","createObj","fields","kv","CURRIED_KEY","uncurry","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","partialApply","args","undefined","concat","dateOffsetToString","isMinus","minutes","abs","dateToHalfUTCString","half","toISOString","dateToStringWithCustomFormat","format","utc","replace","match","rep","Number","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","_a","_b","_c","dateWithOffset","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","_provider","DateTime","P","cmp","DP","RM","MAX_DP","NE","PE","NAME","INVALID","INVALID_DP","INVALID_RM","UNDEFINED","NUMERIC","parse","nl","test","charAt","search","round","Big","dp","rm","more","xc","unshift","pop","stringify","id","k","z","join","isneg","yc","a","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","one","sqrt","toExponential","toFixed","toPrecision","sd","valueOf","_Big_","findIndex","normalize","version","seqToString","callStack","iterator","cons","entries","compareList","tail","head","List","cur","next","done","from","Union","withParens","field","tag","cases","recordToJSON","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","Record","Decimal","escape","interpolateRegExp","formatRegExp","isNumeric","isLessThan","_Long","substr","toHex","interpolate","input","_","prefix","flags","padLength","precision","formatReplacement","continuePrint","cont","arg","toText","sign","toLowerCase","toUpperCase","dateToString","zeroFlag","minusFlag","ch","padLeft","idx","pattern","intPart","decimalPart","isNullOrEmpty","delimiter","xs","isRight","Some","some","Enumerator","iter","current","getEnumerator","GetEnumerator","toIterator","en","hasNext","Seq","makeSeq","isArrayOrBufferView","append","ys","delay","firstDone","iters","unfold","empty","singleton","fold","acc","iterate","isEmpty","sumBy","adder","Add","GetZero","fst","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","gen","getHashCode","getGenerics","fullnameHash","genHashes","t1","t2","getRecordElements","k1","v1","k2","v2","endsWith","source","target","f_mut","state_mut","xs_mut","state","List_1","ofSeq","fold_1","ofArrayWithTail","tail_1","col","ofArray","Helpers_combineClasses","cn","tupledArg","list_1","classes","props","matchValue","Helpers_extractClasses","PromiseBuilder","CancellationToken","cancelled","_id","_cancelled","_listeners","Map","listener","delete","$","addListener","Dispose","removeListener","OperationCanceledError","setPrototypeOf","Trampoline","callCount","maxTrampolineCallCount","setTimeout","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","protectedBind","computation","binder","onSuccess","ex","protectedReturn","computation1","computation2","Bind","generator","sequence","body","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","emptyContinuation","_x","defaultCancellationToken","fromContinuations","startWithContinuations","continuation","exceptionContinuation","cancellationContinuation","startAsPromise","cancellationToken","Promise","resolve","reject","HttpMethod","BodyContent","HttpRequest","url","method","headers","withCredentials","overridenMimeType","overridenResponseType","content","ResponseContent","HttpResponse","statusCode","responseText","responseType","responseHeaders","ComparisonIdentity_Structural","comparer","Compare","x_1","LanguagePrimitives_FastGenericComparer","MapTreeLeaf$2","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","MapTreeLeaf$2__get_Value","MapTreeNode$2","left","right","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_size","MapTreeModule_sizeAux","acc_mut","m_mut","m2","MapTreeModule_mk","hl","hr","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","t1h","t2h","matchValue_1","matchValue_2","matchValue_3","MapTreeModule_add","MapTreeModule_empty","MapTreeModule_tryFind","comparer_mut","k_mut","MapTreeModule_iter","MapTreeModule_iterOpt","MapTreeModule_ofArray","arr","forLoopVar","MapTreeModule_MapIterator$2","stack","started","MapTreeModule_collapseLHS","stack_mut","rest","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","tree","this$","combineHash","enumerator","activePatternResult4281","FSharpMap__ComputeHashCode","that","e1","e2","loop","m1","e1c","e2c","map_2","cur1","cur2","iter1","iter2","compareWith","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","MapTreeModule_copyToArray","FSharpMap__get_Count","_arg1","thisArg","iterate_1","clo1","clo2","FSharpMap_$ctor","value_2","MapTreeModule_find","MapTreeModule_mem","Http_defaultRequest","Http_splitAt","splitters","removeEmpty","split","arguments","splits","reg","RegExp","exec","index","lastIndex","Http_request","Http_method","httpVerb","req","Http_send","xhr","XMLHttpRequest","open","Http_serializeMethod","onreadystatechange","readyState","status","response","elements","ofArray_1","chooser","array","filter","choose","headerLine","toLocaleLowerCase","trim","getAllResponseHeaders","setRequestHeader","matchValue_4","mimeType","overrideMimeType","matchValue_5","matchValue_6","send","Pages","Item","Id","Nome","Qtd","obterInvetario","username","builder$0040","singleton_1","Http_get","items","JSON","ReactInterop_useEffectWithDeps","getDisposable","deps","useEffectReact","disposable","React_createDisposable_3A5B6456","dispose","useReact_useEffectOnce_3A5B6456","effect","dependencies","_arg4","useReact_useEffect_Z101E1A95","useState","useFeliz_React__React_useState_Static_1505","initial","linhaTabela","item","children_6","Children","toArray","tabelaRecursos","itens","elems","children_10","children_8","children_4","children_12","renderRecursos","elems_16","xs_17","elems_15","xs_16","elems_14","xs_14","elems_13","xs_2","elems_1","xs_1","value_7","xs_4","elems_3","children","xs_3","xs_7","elems_6","xs_5","xs_6","xs_10","elems_9","xs_8","xs_9","xs_13","elems_12","xs_11","xs_12","types","total","games","xs_18","loadItens","setItens","then","f1","f2","er","er_1","catch","er_2","er_3","success","fail","Profile","profileProps","patternInput","empty_1","elems_2","props_3","props_1","typ","props_2","passwordInput","form","login","userState","setError","setUser","ev","usernameInput","preventDefault","user_1","MainContainer","mainContainerProps","elems_5","elems_4","childComponent","Router","routerProps","loginFn","createElement","render","document","getElementById"],"mappings":"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","file":"app.6beb9c3d5a82c5e06824.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([188,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { createElement as createElement_1 } from \"react\";\r\nimport react from \"react\";\r\n\r\nexport const reactApi = react;\r\n\r\nexport const reactElement = createElement_1;\r\n\r\nexport function mkAttr(key, value) {\r\n    return [key, value];\r\n}\r\n\r\nexport function mkStyle(key, value) {\r\n    return [key, value];\r\n}\r\n\r\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\nexport default Long;\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = LongLib.compare(x, last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nlet ObjectRef = /** @class */ (() => {\n    class ObjectRef {\n        static id(o) {\n            if (!ObjectRef.idMap.has(o)) {\n                ObjectRef.idMap.set(o, ++ObjectRef.count);\n            }\n            return ObjectRef.idMap.get(o);\n        }\n    }\n    ObjectRef.idMap = new WeakMap();\n    ObjectRef.count = 0;\n    return ObjectRef;\n})();\nexport { ObjectRef };\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                const len = x.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(x[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else if (x instanceof Date) {\n                return x.getTime();\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevernt cyclic objects?\n                const hashes = Object.values(self).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(String(x));\n            }\n        }\n    }\n}\nexport function hashSafe(x) {\n    var _a;\n    return (_a = x === null || x === void 0 ? void 0 : x.GetHashCode()) !== null && _a !== void 0 ? _a : 0;\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalsSafe(x, y) {\n    var _a;\n    return (_a = x === null || x === void 0 ? void 0 : x.Equals(y)) !== null && _a !== void 0 ? _a : y == null;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compareSafe(x, y) {\n    var _a;\n    return (_a = x === null || x === void 0 ? void 0 : x.CompareTo(y)) !== null && _a !== void 0 ? _a : (y == null ? 0 : -1);\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return undefined;\n    }\n    // The function is already uncurried\n    if (f.length > 1) {\n        // if (CURRIED_KEY in f) { // This doesn't always work\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return undefined;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[0];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport class List {\n    constructor(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    [Symbol.iterator]() {\n        let cur = this;\n        return {\n            next: () => {\n                const value = cur === null || cur === void 0 ? void 0 : cur.head;\n                const done = (cur === null || cur === void 0 ? void 0 : cur.tail) == null;\n                cur = cur === null || cur === void 0 ? void 0 : cur.tail;\n                return { done, value };\n            },\n        };\n    }\n    toJSON() { return Array.from(this); }\n    toString() { return seqToString(this); }\n    GetHashCode() { return combineHashCodes(Array.from(this).map(structuralHash)); }\n    Equals(other) { return compareList(this, other) === 0; }\n    CompareTo(other) { return compareList(this, other); }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        if (this.fields.length === 0) {\n            return this.name;\n        }\n        else {\n            let fields = \"\";\n            let withParens = true;\n            if (this.fields.length === 1) {\n                const field = toString(this.fields[0]);\n                withParens = field.indexOf(\" \") >= 0;\n                fields = field;\n            }\n            else {\n                fields = this.fields.map((x) => toString(x)).join(\", \");\n            }\n            return this.name + (withParens ? \" (\" : \" \") + fields + (withParens ? \")\" : \"\");\n        }\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            for (let i = 0; i < len - 2; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[len - 2];\n            match.input = arguments[len - 1];\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        // $0 doesn't work with JS regex, see #1155\n        replacement = replacement.replace(/\\$0/g, (_s) => \"$&\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport Decimal from \"./Decimal.js\";\nimport Long, * as _Long from \"./Long.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\n// These are used for formatting and only take longs and decimals into account (no bigint)\nfunction isNumeric(x) {\n    return typeof x === \"number\" || x instanceof Long || x instanceof Decimal;\n}\nfunction isLessThan(x, y) {\n    if (x instanceof Long) {\n        return _Long.compare(x, y) < 0;\n    }\n    else if (x instanceof Decimal) {\n        return x.cmp(y) < 0;\n    }\n    else {\n        return x < y;\n    }\n}\nfunction multiply(x, y) {\n    if (x instanceof Long) {\n        return _Long.op_Multiply(x, y);\n    }\n    else if (x instanceof Decimal) {\n        return x.mul(y);\n    }\n    else {\n        return x * y;\n    }\n}\nfunction toFixed(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toFixed(dp).substr(1);\n    }\n    else {\n        return x.toFixed(dp);\n    }\n}\nfunction toPrecision(x, sd) {\n    if (x instanceof Long) {\n        return String(x) + (0).toPrecision(sd).substr(1);\n    }\n    else {\n        return x.toPrecision(sd);\n    }\n}\nfunction toExponential(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toExponential(dp).substr(1);\n    }\n    else {\n        return x.toExponential(dp);\n    }\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return _Long.toString(x.unsigned ? x : _Long.fromBytes(_Long.toBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(input, values) {\n    let i = 0;\n    return input.replace(interpolateRegExp, (_, prefix, flags, padLength, precision, format) => {\n        return formatReplacement(values[i++], prefix, flags, padLength, precision, format);\n    });\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, prefix, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return prefix ? prefix + rep : rep;\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, padLength, precision, format) => {\n        const once = formatReplacement(rep, prefix, flags, padLength, precision, format);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal.js\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long.js\";\nimport { some, value } from \"./Option.js\";\nimport { compare, equals } from \"./Util.js\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nclass Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    [Symbol.iterator]() { return new Seq(this.f); }\n    next() {\n        var _a;\n        this.iter = (_a = this.iter) !== null && _a !== void 0 ? _a : this.f();\n        return this.iter.next();\n    }\n    toString() {\n        return \"seq [\" + Array.from(this).join(\"; \") + \"]\";\n    }\n}\nfunction makeSeq(f) {\n    return new Seq(f);\n}\nfunction isArrayOrBufferView(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs);\n}\nexport function ofArray(xs) {\n    if (Array.isArray(xs)) {\n        return delay(() => xs);\n    }\n    else {\n        return delay(() => unfold((i) => i != null && i < xs.length ? [xs[i], i + 1] : undefined, 0));\n    }\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, undefined];\n        return unfold(() => {\n            var _a, _b;\n            let cur;\n            if (!firstDone) {\n                cur = (_a = iters[0]) === null || _a === void 0 ? void 0 : _a.next();\n                if (cur != null && !cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [undefined, ys[Symbol.iterator]()];\n                }\n            }\n            cur = (_b = iters[1]) === null || _b === void 0 ? void 0 : _b.next();\n            return cur != null && !cur.done ? [cur.value, iters] : undefined;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output;\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = cur.value;\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = undefined;\n                    }\n                }\n            }\n            return innerIter != null ? [output, innerIter] : undefined;\n        }, undefined);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    let cur1;\n    let cur2;\n    let c = 0;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        c = f(cur1.value, cur2.value);\n        if (c !== 0) {\n            break;\n        }\n    }\n    return (c !== 0) ? c : (cur1.done && !cur2.done) ? -1 : (!cur1.done && cur2.done) ? 1 : 0;\n}\nexport function delay(f) {\n    return makeSeq(() => f()[Symbol.iterator]());\n}\nexport function empty() {\n    return delay(() => []);\n}\nexport function singleton(y) {\n    return delay(() => [y]);\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : undefined, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : undefined, undefined));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            try {\n                return empty();\n            }\n            finally {\n                finalFn();\n            }\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : undefined;\n            }\n            catch (err) {\n                return undefined;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const ar2 = isArrayOrBufferView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? undefined : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : undefined, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return undefined;\n    }\n    if (isArrayOrBufferView(xs)) {\n        return i < xs.length ? some(xs[i]) : undefined;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return undefined;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => (f(x), undefined), undefined, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => (f(x, y), undefined), undefined, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => (f(i !== null && i !== void 0 ? i : 0, x), undefined), undefined, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => (f(i !== null && i !== void 0 ? i : 0, x, y), undefined), undefined, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? undefined : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return isArrayOrBufferView(xs)\n        ? xs.length\n        : fold((acc, _x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : undefined;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        const cur = iter.next();\n        if (cur.done) {\n            return empty();\n        }\n        const hd = cur.value;\n        const tl = tail(xs);\n        const ys = scan(([_, last], next) => [last, next], [hd, hd], tl);\n        return skip(1, ys);\n    });\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : undefined, first));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : undefined, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return undefined;\n        }, undefined);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function skip(n, xs) {\n    return makeSeq(() => {\n        const iter = xs[Symbol.iterator]();\n        for (let i = 1; i <= n; i++) {\n            if (iter.next().done) {\n                throw new Error(\"Seq has not enough elements\");\n            }\n        }\n        return iter;\n    });\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    return skip(1, xs);\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold(() => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, undefined];\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? undefined : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return undefined;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return makeSeq(() => {\n        // Capture a copy of the first value in the closure\n        // so the sequence is restarted every time, see #1230\n        let acc = fst;\n        const iter = {\n            next() {\n                const res = f(acc);\n                if (res != null) {\n                    const v = value(res);\n                    if (v != null) {\n                        acc = v[1];\n                        return { done: false, value: v[0] };\n                    }\n                }\n                return { done: true, value: undefined };\n            },\n        };\n        return iter;\n    });\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return makeSeq(() => {\n        let window = [];\n        const iter = source[Symbol.iterator]();\n        const iter2 = {\n            next() {\n                let cur;\n                while (window.length < windowSize) {\n                    if ((cur = iter.next()).done) {\n                        return { done: true, value: undefined };\n                    }\n                    window.push(cur.value);\n                }\n                const value = window;\n                window = window.slice(1);\n                return { done: false, value };\n            },\n        };\n        return iter2;\n    });\n}\nexport function transpose(source) {\n    return makeSeq(() => {\n        const iters = Array.from(source, (x) => x[Symbol.iterator]());\n        const iter = {\n            next() {\n                if (iters.length === 0) {\n                    return { done: true, value: undefined }; // empty sequence\n                }\n                const results = Array.from(iters, (iter) => iter.next());\n                if (results[0].done) {\n                    if (!results.every((x) => x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    return { done: true, value: undefined };\n                }\n                else {\n                    if (!results.every((x) => !x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    const values = results.map((x) => x.value);\n                    return { done: false, value: values };\n                }\n            },\n        };\n        return iter;\n    });\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, comparePrimitives, max as max_1 } from \"./Util.js\";\nimport { Dictionary } from \"./MutableMap.js\";\nimport { addToDict, addToSet, getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { iterate as iterate_1 } from \"./Seq.js\";\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new (cons || Array)((len1 + len2));\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = new (cons || Array)(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = new (cons || Array)(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = new (cons || Array)(matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = new (cons || Array)(matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1(comparePrimitives, 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return new (cons || Array)(0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = (totalLength + arr_1.length);\n            }\n            const result = new (cons || Array)(totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = (totalIdx + 1);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    const mapped = map(mapping, array, null);\n    return concat(mapped, cons);\n}\n\nexport function countBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const value = array[idx];\n        const key = projection(value);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            const value_1 = keys.push(key);\n            void value_1;\n        }\n    }\n    const result = map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys, null);\n    return result;\n}\n\nexport function distinctBy(projection, array, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => {\n        const arg00 = projection(arg);\n        return addToSet(arg00, hashSet);\n    }, array);\n}\n\nexport function distinct(array, eq) {\n    return distinctBy((x) => x, array, eq);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (array.length === 0) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return array.filter(((arg00) => addToSet(arg00, cached)));\n    }\n}\n\nexport function groupBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const v = array[idx];\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            void (matchValue[1].push(v));\n        }\n        else {\n            addToDict(dict, key, [v]);\n            const value = keys.push(key);\n            void value;\n        }\n    }\n    const result = map((key_1) => [key_1, Array.from(getItemFromDict(dict, key_1))], keys, null);\n    return result;\n}\n\nexport function empty(cons) {\n    return new (cons || Array)(0);\n}\n\nexport function singleton(value, cons) {\n    const ar = new (cons || Array)(1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = new (cons || Array)(count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = new (cons || Array)(count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = new (cons || Array)((array.length + 1));\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = new (cons || Array)((array.length + 1));\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === array.length) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === 0) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    const value = array.push(x);\n    void value;\n}\n\nexport function addRangeInPlace(range, array) {\n    iterate_1((x) => {\n        const value = array.push(x);\n        void value;\n    }, range);\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        const value = array.splice(i, 1);\n        void value;\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            const value = array.splice(i, 1);\n            void value;\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + count)) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = new (cons || Array)(len);\n    const res2 = new (cons || Array)(len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = (iTrue + 1);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = (iFalse + 1);\n        }\n    }\n    return [(truncate(iTrue, res1)), (truncate(iFalse, res2))];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        const res = value_2(matchValue);\n        return res;\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound() | 0;\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    const res = value_2(matchValue);\n                    return res;\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound() | 0;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    const arr = array.filter(((x) => {\n        const option = chooser(x);\n        return option != null;\n    }));\n    return map((x_1) => {\n        const option_1 = chooser(x_1);\n        return value_2(option_1);\n    }, arr, cons);\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce((folder), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    let isValid;\n    isValid = (checkFlags.every(((y) => (1 === y))));\n    if (!isValid) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                const value = res.push(x);\n                void value;\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            const start = (x * chunkSize) | 0;\n            let slice;\n            const start_1 = start | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            const value = result.push(slice);\n            void value;\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = comparer(array1[i], array2[i]);\n                i = (i + 1);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith(compare, array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1(comparePrimitives, 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1(comparePrimitives, chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            const start = ((i * minChunkSize) + min_1(comparePrimitives, chunksWithExtraItem, i)) | 0;\n            let slice;\n            const start_1 = start | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            const value = result.push(slice);\n            void value;\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    let value;\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const firstArray = arrays_1[0];\n        const lenInner = firstArray.length | 0;\n        if (value = (forAll((a) => (a.length === lenInner), arrays_1)), (!value)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = (new (cons || Array)(len));\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { List } from \"./Types.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { FSharpRef, List as List_1 } from \"./Types.js\";\nimport { transpose as transpose_1, pairwise as pairwise_1, collect as collect_1, scanBack as scanBack_1, scan as scan_1, foldBack2 as foldBack2_1, fold2 as fold2_1, fold as fold_1, map as map_1 } from \"./Seq.js\";\nimport { uncurry, count } from \"./Util.js\";\nimport { splitInto as splitInto_1, chunkBySize as chunkBySize_1, permute as permute_1, findIndexBack as findIndexBack_1, tryFindIndexBack as tryFindIndexBack_1 } from \"./Array.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet } from \"./MapUtil.js\";\nimport { Dictionary } from \"./MutableMap.js\";\n\nexport function empty() {\n    return new List();\n}\n\nexport function singleton(x) {\n    return new List(x, empty());\n}\n\nexport function cons(x, xs) {\n    return new List(x, xs);\n}\n\nexport function head(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.head;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function tryHead(_arg1) {\n    if (_arg1.tail != null) {\n        return some(_arg1.head);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function tail(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.tail;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function last(_arg1_mut) {\n    last:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return _arg1.head;\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue last;\n            }\n        }\n        else {\n            throw (new Error(\"List was empty\"));\n        }\n        break;\n    }\n}\n\nexport function tryLast(_arg1_mut) {\n    tryLast:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return some(_arg1.head);\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue tryLast;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    else {\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1, ys_1];\n                if (matchValue[0].tail != null) {\n                    if (matchValue[1].tail != null) {\n                        const matchValue_1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n                        if (matchValue_1 === 0) {\n                            xs_1_mut = matchValue[0].tail;\n                            ys_1_mut = matchValue[1].tail;\n                            continue loop;\n                        }\n                        else {\n                            return matchValue_1 | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1].tail == null) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n                break;\n            }\n        };\n        return loop(xs, ys) | 0;\n    }\n}\n\nexport function foldIndexedAux(f_mut, i_mut, acc_mut, _arg1_mut) {\n    foldIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            f_mut = f;\n            i_mut = (i + 1);\n            acc_mut = f(i, acc, _arg1.head);\n            _arg1_mut = _arg1.tail;\n            continue foldIndexedAux;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function foldIndexed(f, state, xs) {\n    return foldIndexedAux(f, 0, state, xs);\n}\n\nexport function fold(f_mut, state_mut, xs_mut) {\n    fold:\n    while (true) {\n        const f = f_mut, state = state_mut, xs = xs_mut;\n        if (xs.tail != null) {\n            f_mut = f;\n            state_mut = f(state, xs.head);\n            xs_mut = xs.tail;\n            continue fold;\n        }\n        else {\n            return state;\n        }\n        break;\n    }\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => (new List_1(x, acc)), new List_1(), xs);\n}\n\nexport function foldBack(f, xs, state) {\n    return fold((acc, x) => f(x, acc), state, reverse(xs));\n}\n\nexport function toSeq(xs) {\n    return map_1((x) => x, xs);\n}\n\nexport function ofSeq(xs) {\n    const xs_1 = fold_1((acc, x) => (new List_1(x, acc)), new List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function concat(lists) {\n    const xs_1 = fold_1((state, xs) => fold((acc, x) => (new List_1(x, acc)), state, xs), new List_1(), lists);\n    return reverse(xs_1);\n}\n\nexport function foldIndexed2Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut) {\n    foldIndexed2Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y);\n                bs_mut = xs;\n                cs_mut = ys;\n                continue foldIndexed2Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed2(f, state, xs, ys) {\n    return foldIndexed2Aux(f, 0, state, xs, ys);\n}\n\nexport function fold2(f, state, xs, ys) {\n    return fold2_1(f, state, xs, ys);\n}\n\nexport function foldBack2(f, xs, ys, state) {\n    return foldBack2_1(f, xs, ys, state);\n}\n\nexport function unfold(f, state) {\n    const unfoldInner = (acc_mut, state_1_mut) => {\n        unfoldInner:\n        while (true) {\n            const acc = acc_mut, state_1 = state_1_mut;\n            const matchValue = f(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const state_2 = matchValue[1];\n                acc_mut = (new List_1(x, acc));\n                state_1_mut = state_2;\n                continue unfoldInner;\n            }\n            else {\n                return reverse(acc);\n            }\n            break;\n        }\n    };\n    return unfoldInner(new List_1(), state);\n}\n\nexport function foldIndexed3Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut, ds_mut) {\n    foldIndexed3Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut, ds = ds_mut;\n        const matchValue = [bs, cs, ds];\n        let pattern_matching_result, x, xs, y, ys, z, zs;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[2].tail != null) {\n                    pattern_matching_result = 1;\n                    x = matchValue[0].head;\n                    xs = matchValue[0].tail;\n                    y = matchValue[1].head;\n                    ys = matchValue[1].tail;\n                    z = matchValue[2].head;\n                    zs = matchValue[2].tail;\n                }\n                else {\n                    pattern_matching_result = 2;\n                }\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            if (matchValue[2].tail == null) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y, z);\n                bs_mut = xs;\n                cs_mut = ys;\n                ds_mut = zs;\n                continue foldIndexed3Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed3(f, seed, xs, ys, zs) {\n    return foldIndexed3Aux(f, 0, seed, xs, ys, zs);\n}\n\nexport function fold3(f, state, xs, ys, zs) {\n    return foldIndexed3((_arg1, acc, x, y, z) => f(acc, x, y, z), state, xs, ys, zs);\n}\n\nexport function scan(f, state, xs) {\n    const xs_1 = scan_1(f, state, xs);\n    return ofSeq(xs_1);\n}\n\nexport function scanBack(f, xs, state) {\n    const xs_1 = scanBack_1(f, xs, state);\n    return ofSeq(xs_1);\n}\n\nexport function length(xs) {\n    return fold((acc, _arg1) => (acc + 1), 0, xs);\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => (new List_1(x, acc)), ys, reverse(xs));\n}\n\nexport function collect(f, xs) {\n    const xs_1 = collect_1(f, xs);\n    return ofSeq(xs_1);\n}\n\nexport function map(f, xs) {\n    const xs_1 = fold((acc, x) => (new List_1(f(x), acc)), new List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function mapIndexed(f, xs) {\n    const xs_1 = foldIndexed((i, acc, x) => (new List_1(f(i, x), acc)), new List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(f, xs, ys) {\n    const xs_1 = fold2((acc, x, y) => (new List_1(f(x, y), acc)), new List_1(), xs, ys);\n    return reverse(xs_1);\n}\n\nexport function mapIndexed2(f, xs, ys) {\n    const xs_1 = foldIndexed2((i, acc, x, y) => (new List_1(f(i, x, y), acc)), new List_1(), xs, ys);\n    return reverse(xs_1);\n}\n\nexport function map3(f, xs, ys, zs) {\n    const xs_1 = fold3((acc, x, y, z) => (new List_1(f(x, y, z), acc)), new List_1(), xs, ys, zs);\n    return reverse(xs_1);\n}\n\nexport function mapIndexed3(f, xs, ys, zs) {\n    const xs_1 = foldIndexed3((i, acc, x, y, z) => (new List_1(f(i, x, y, z), acc)), new List_1(), xs, ys, zs);\n    return reverse(xs_1);\n}\n\nexport function mapFold(f, s, xs) {\n    const patternInput_1 = fold((tupledArg, x) => {\n        const patternInput = f(tupledArg[1], x);\n        return [new List_1(patternInput[0], tupledArg[0]), patternInput[1]];\n    }, [new List_1(), s], xs);\n    return [reverse(patternInput_1[0]), patternInput_1[1]];\n}\n\nexport function mapFoldBack(f, xs, s) {\n    return mapFold((s_1, v) => f(v, s_1), s, reverse(xs));\n}\n\nexport function iterate(f, xs) {\n    fold((unitVar0, x) => {\n        f(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(f, xs, ys) {\n    fold2((unitVar0, x, y) => {\n        f(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(f, xs) {\n    foldIndexed((i, unitVar1, x) => {\n        f(i, x);\n    }, void 0, xs);\n}\n\nexport function iterateIndexed2(f, xs, ys) {\n    foldIndexed2((i, unitVar1, x, y) => {\n        f(i, x, y);\n    }, void 0, xs, ys);\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = count(xs) - 1; i >= 0; i--) {\n        res = (new List_1(xs[i], res));\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, new List_1());\n}\n\nexport function isEmpty(_arg1) {\n    if (_arg1.tail == null) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function tryPickIndexedAux(f_mut, i_mut, _arg1_mut) {\n    tryPickIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            const result = f(i, _arg1.head);\n            if (result == null) {\n                f_mut = f;\n                i_mut = (i + 1);\n                _arg1_mut = _arg1.tail;\n                continue tryPickIndexedAux;\n            }\n            else {\n                return result;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function tryPickIndexed(f, xs) {\n    return tryPickIndexedAux(f, 0, xs);\n}\n\nexport function tryPick(f, xs) {\n    return tryPickIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue != null) {\n        const x = value_1(matchValue);\n        return x;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function tryFindIndexed(f, xs) {\n    return tryPickIndexed((i, x) => (f(i, x) ? some(x) : (void 0)), xs);\n}\n\nexport function tryFind(f, xs) {\n    return tryPickIndexed((_arg1, x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function findIndexed(f, xs) {\n    const matchValue = tryFindIndexed(f, xs);\n    if (matchValue != null) {\n        const x = value_1(matchValue);\n        return x;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function find(f, xs) {\n    return findIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function findBack(f, xs) {\n    let xs_2;\n    xs_2 = reverse(xs);\n    return find(f, xs_2);\n}\n\nexport function tryFindBack(f, xs) {\n    let xs_2;\n    xs_2 = reverse(xs);\n    return tryFind(f, xs_2);\n}\n\nexport function tryFindIndex(f, xs) {\n    return tryPickIndexed((i, x) => (f(x) ? i : (void 0)), xs);\n}\n\nexport function tryFindIndexBack(f, xs) {\n    const array = Array.from(xs);\n    return tryFindIndexBack_1(f, array);\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue != null) {\n        const x = matchValue | 0;\n        return x | 0;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function findIndexBack(f, xs) {\n    const array = Array.from(xs);\n    return findIndexBack_1(f, array) | 0;\n}\n\nexport function item(n, xs) {\n    return findIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function tryItem(n, xs) {\n    return tryFindIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function filter(f, xs) {\n    const xs_1 = fold((acc, x) => (f(x) ? (new List_1(x, acc)) : acc), new List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function partition(f, xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => (f(x) ? [new List_1(x, lacc), racc] : [lacc, new List_1(x, racc)]);\n    }), [new List_1(), new List_1()], reverse(xs));\n}\n\nexport function choose(f, xs) {\n    const xs_1 = fold((acc, x) => {\n        const matchValue = f(x);\n        if (matchValue == null) {\n            return acc;\n        }\n        else {\n            const y = value_1(matchValue);\n            return new List_1(y, acc);\n        }\n    }, new List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function contains(value, list, eq) {\n    const loop = (xs_mut) => {\n        loop:\n        while (true) {\n            const xs = xs_mut;\n            if (xs.tail != null) {\n                if (eq.Equals(value, xs.head)) {\n                    return true;\n                }\n                else {\n                    xs_mut = xs.tail;\n                    continue loop;\n                }\n            }\n            else {\n                return false;\n            }\n            break;\n        }\n    };\n    return loop(list);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (isEmpty(array)) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return filter((arg00) => addToSet(arg00, cached), array);\n    }\n}\n\nexport function initialize(n, f) {\n    let xs = new List_1();\n    for (let i = 0; i <= (n - 1); i++) {\n        xs = (new List_1(f(i), xs));\n    }\n    return reverse(xs);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, _arg1) {\n    if (_arg1.tail != null) {\n        return fold(f, _arg1.head, _arg1.tail);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function reduceBack(f, _arg1) {\n    if (_arg1.tail != null) {\n        return foldBack(f, _arg1.tail, _arg1.head);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f_mut, _arg1_mut) {\n    exists:\n    while (true) {\n        const f = f_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (f(_arg1.head)) {\n                return true;\n            }\n            else {\n                f_mut = f;\n                _arg1_mut = _arg1.tail;\n                continue exists;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function exists2(f_mut, bs_mut, cs_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(x, y)) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    bs_mut = xs;\n                    cs_mut = ys;\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1])], xs, [new List_1(), new List_1()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1]), new List_1(tupledArg[2], tupledArg_1[2])], xs, [new List_1(), new List_1(), new List_1()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sort(xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortDescending(xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortWith(comparer, xs) {\n    let xs_2;\n    const comparer_1 = comparer;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(comparer_1);\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(li, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), li);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    const total = fold((acc, x) => averager.Add(acc, x), averager.GetZero(), xs);\n    return averager.DivideByInt(total, length(xs));\n}\n\nexport function averageBy(f, xs, averager) {\n    const total = fold((acc, x) => averager.Add(acc, f(x)), averager.GetZero(), xs);\n    return averager.DivideByInt(total, length(xs));\n}\n\nexport function permute(f, xs) {\n    let xs_1;\n    let array;\n    array = Array.from(xs);\n    xs_1 = permute_1(f, array);\n    return ofArray(xs_1);\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    let xs_3;\n    let xs_1;\n    let array;\n    array = Array.from(xs);\n    xs_1 = chunkBySize_1(chunkSize, array);\n    xs_3 = ofArray(xs_1);\n    return map(ofArray, xs_3);\n}\n\nexport function skip(i, xs) {\n    const skipInner = (i_1_mut, xs_1_mut) => {\n        skipInner:\n        while (true) {\n            const i_1 = i_1_mut, xs_1 = xs_1_mut;\n            const matchValue = [i_1, xs_1];\n            if (matchValue[0] === 0) {\n                return xs_1;\n            }\n            else if (matchValue[1].tail != null) {\n                i_1_mut = (i_1 - 1);\n                xs_1_mut = matchValue[1].tail;\n                continue skipInner;\n            }\n            else {\n                throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n            }\n            break;\n        }\n    };\n    const matchValue_1 = [i, xs];\n    if (matchValue_1[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_4, xs_4;\n        if (matchValue_1[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue_1[0] === 1) {\n            if (matchValue_1[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_4 = matchValue_1[0];\n                xs_4 = matchValue_1[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_4 = matchValue_1[0];\n            xs_4 = matchValue_1[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return xs;\n            }\n            case 1: {\n                return matchValue_1[1].tail;\n            }\n            case 2: {\n                return skipInner(i_4, xs_4);\n            }\n        }\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        let pattern_matching_result, h_1, t_1;\n        if (xs.tail != null) {\n            if (predicate(xs.head)) {\n                pattern_matching_result = 0;\n                h_1 = xs.head;\n                t_1 = xs.tail;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                predicate_mut = predicate;\n                xs_mut = t_1;\n                continue skipWhile;\n            }\n            case 1: {\n                return xs;\n            }\n        }\n        break;\n    }\n}\n\nexport function takeSplitAux(error_mut, i_mut, acc_mut, xs_mut) {\n    takeSplitAux:\n    while (true) {\n        const error = error_mut, i = i_mut, acc = acc_mut, xs = xs_mut;\n        const matchValue = [i, xs];\n        if (matchValue[0] === 0) {\n            return [reverse(acc), xs];\n        }\n        else if (matchValue[1].tail != null) {\n            error_mut = error;\n            i_mut = (i - 1);\n            acc_mut = (new List_1(matchValue[1].head, acc));\n            xs_mut = matchValue[1].tail;\n            continue takeSplitAux;\n        }\n        else if (error) {\n            throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n        }\n        else {\n            return [reverse(acc), xs];\n        }\n        break;\n    }\n}\n\nexport function take(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                const tuple = takeSplitAux(true, i_3, new List_1(), xs_1);\n                return tuple[0];\n            }\n        }\n    }\n}\n\nexport function takeWhile(predicate, xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail == null) {\n            if (predicate(xs.head)) {\n                return xs;\n            }\n            else {\n                return xs.tail;\n            }\n        }\n        else if (!predicate(xs.head)) {\n            return new List_1();\n        }\n        else {\n            return new List_1(xs.head, takeWhile(predicate, xs.tail));\n        }\n    }\n    else {\n        return xs;\n    }\n}\n\nexport function truncate(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                const tuple = takeSplitAux(false, i_3, new List_1(), xs_1);\n                return tuple[0];\n            }\n        }\n    }\n}\n\nexport function splitAt(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_2;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_2 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_2 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [new List_1(), xs];\n            }\n            case 1: {\n                return [new List_1(matchValue[1].head, new List_1()), matchValue[1].tail];\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_2);\n            }\n        }\n    }\n}\n\nexport function outOfRange() {\n    throw (new Error(\"Index out of range\"));\n}\n\nexport function getSlice(lower, upper, xs) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const hasUpper = upper != null;\n    if (lower_1 < 0) {\n        return outOfRange();\n    }\n    else if (hasUpper ? (upper < lower_1) : false) {\n        return new List_1();\n    }\n    else {\n        let lastIndex = -1;\n        let res;\n        res = foldIndexed((i, acc, x) => {\n            lastIndex = i;\n            if ((lower_1 <= i) ? ((!hasUpper) ? true : (i <= upper)) : false) {\n                return new List_1(x, acc);\n            }\n            else {\n                return acc;\n            }\n        }, new List_1(), xs);\n        if ((lower_1 > (lastIndex + 1)) ? true : (hasUpper ? (upper > lastIndex) : false)) {\n            outOfRange();\n        }\n        return reverse(res);\n    }\n}\n\nexport function distinctBy(projection, xs, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => {\n        const arg00 = projection(arg);\n        return addToSet(arg00, hashSet);\n    }, xs);\n}\n\nexport function distinct(xs, eq) {\n    return distinctBy((x) => x, xs, eq);\n}\n\nexport function exactlyOne(xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail != null) {\n            throw (new Error(\"Input list too long\\\\nParameter name: list\"));\n        }\n        else {\n            return xs.head;\n        }\n    }\n    else {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: list\"));\n    }\n}\n\nexport function groupBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, new List_1(v, matchValue[1]));\n        }\n        else {\n            addToDict(dict, key, new List_1(v, new List_1()));\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    const xs_2 = keys;\n    iterate((key_1) => {\n        result = (new List_1([key_1, reverse(getItemFromDict(dict, key_1))], result));\n    }, xs_2);\n    return result;\n}\n\nexport function countBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    const xs_2 = keys;\n    iterate((key_1) => {\n        result = (new List_1([key_1, getItemFromDict(dict, key_1)], result));\n    }, xs_2);\n    return result;\n}\n\nexport function where(predicate, source) {\n    return filter(predicate, source);\n}\n\nexport function pairwise(source) {\n    const xs = pairwise_1(source);\n    return ofSeq(xs);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res = new List_1();\n    for (let i = length(source); i >= windowSize; i--) {\n        res = (new List_1(getSlice(i - windowSize, i - 1, source), res));\n    }\n    return res;\n}\n\nexport function splitInto(chunks, source) {\n    let xs_2;\n    let xs;\n    let array;\n    array = Array.from(source);\n    xs = splitInto_1(chunks, array);\n    xs_2 = ofArray(xs);\n    return map(ofArray, xs_2);\n}\n\nexport function transpose(lists) {\n    let xs_1;\n    let source_1;\n    source_1 = transpose_1(lists);\n    xs_1 = map_1(ofSeq, source_1);\n    return ofSeq(xs_1);\n}\n\n","import { empty, cons, fold, reverse } from \"../fable-library.3.0.0-nagareyama-rc-007/List.js\";\r\nimport { uncurry } from \"../fable-library.3.0.0-nagareyama-rc-007/Util.js\";\r\nimport { toString } from \"../fable-library.3.0.0-nagareyama-rc-007/Types.js\";\r\nimport { mkAttr } from \"../Feliz.1.17.0/Interop.fs.js\";\r\nimport { join } from \"../fable-library.3.0.0-nagareyama-rc-007/String.js\";\r\n\r\nexport function Helpers_extractClasses(xs) {\r\n    let list_1;\r\n    list_1 = reverse(xs);\r\n    return fold(uncurry(2, (tupledArg) => {\r\n        const classes = tupledArg[0];\r\n        const props = tupledArg[1];\r\n        return (x) => {\r\n            const matchValue = x;\r\n            return (matchValue[0] === \"className\") ? [cons(toString(matchValue[1]), classes), props] : [classes, cons(x, props)];\r\n        };\r\n    }), [empty(), empty()], list_1);\r\n}\r\n\r\nexport function Helpers_combineClasses(cn, xs) {\r\n    let tupledArg;\r\n    tupledArg = Helpers_extractClasses(xs);\r\n    return cons((mkAttr(\"className\", join(\" \", cons(cn, tupledArg[0])))), tupledArg[1]);\r\n}\r\n\r\n","import { Result_MapError, Result_Map, FSharpResult$2 } from \"../fable-library.3.0.0-nagareyama-rc-007/Choice.js\";\r\nimport { class_type } from \"../fable-library.3.0.0-nagareyama-rc-007/Reflection.js\";\r\nimport { getEnumerator } from \"../fable-library.3.0.0-nagareyama-rc-007/Seq.js\";\r\nimport { equals, createObj } from \"../fable-library.3.0.0-nagareyama-rc-007/Util.js\";\r\nimport { ofArray } from \"../fable-library.3.0.0-nagareyama-rc-007/List.js\";\r\n\r\nexport function reject(reason) {\r\n    return Promise.reject(reason);\r\n}\r\n\r\nexport function result(a) {\r\n    return a.then(((arg) => {\r\n        let arg0;\r\n        arg0 = (new FSharpResult$2(0, arg));\r\n        return arg0;\r\n    }),((arg_1) => {\r\n        let arg0_2;\r\n        arg0_2 = (new FSharpResult$2(1, arg_1));\r\n        return arg0_2;\r\n    }));\r\n}\r\n\r\nexport function mapResult(fn, a) {\r\n    return a.then(((result_1) => Result_Map(fn, result_1)));\r\n}\r\n\r\nexport function bindResult(fn, a) {\r\n    return a.then(((a_1) => {\r\n        if (a_1.tag === 1) {\r\n            return Promise.resolve((new FSharpResult$2(1, a_1.fields[0])));\r\n        }\r\n        else {\r\n            return result(fn(a_1.fields[0]));\r\n        }\r\n    }));\r\n}\r\n\r\nexport function mapResultError(fn, a) {\r\n    return a.then(((result_1) => Result_MapError(fn, result_1)));\r\n}\r\n\r\nexport function tap(fn, a) {\r\n    return a.then(((x) => {\r\n        fn(x);\r\n        return x;\r\n    }));\r\n}\r\n\r\nexport class PromiseBuilder {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function PromiseBuilder$reflection() {\r\n    return class_type(\"Promise.PromiseBuilder\", void 0, PromiseBuilder);\r\n}\r\n\r\nexport function PromiseBuilder_$ctor() {\r\n    return new PromiseBuilder();\r\n}\r\n\r\nexport function PromiseBuilder__For_1565554B(x, seq, body) {\r\n    let p = Promise.resolve(undefined);\r\n    const enumerator = getEnumerator(seq);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const a = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            const x_1 = p.then((() => body(a)));\r\n            p = x_1;\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return p;\r\n}\r\n\r\nexport function PromiseBuilder__While_2044D34(x, guard, p) {\r\n    if (guard()) {\r\n        return p.then((() => PromiseBuilder__While_2044D34(x, guard, p)));\r\n    }\r\n    else {\r\n        return Promise.resolve(undefined);\r\n    }\r\n}\r\n\r\nexport function PromiseBuilder__TryFinally_7D49A2FD(x, p, compensation) {\r\n    return p.then(((x_1) => {\r\n        compensation();\r\n        return x_1;\r\n    }),((er) => {\r\n        compensation();\r\n        throw er;\r\n    }));\r\n}\r\n\r\nexport function PromiseBuilder__Delay_62FBFDE1(x, generator) {\r\n    const x_6 = createObj(ofArray([[\"then\", (f1, f2) => {\r\n        try {\r\n            return generator().then(f1, f2);\r\n        }\r\n        catch (er) {\r\n            if (equals(f2, null)) {\r\n                const x_1 = Promise.reject(er);\r\n                return x_1;\r\n            }\r\n            else {\r\n                try {\r\n                    const x_2 = Promise.resolve(f2(er));\r\n                    return x_2;\r\n                }\r\n                catch (er_1) {\r\n                    const x_3 = Promise.reject(er_1);\r\n                    return x_3;\r\n                }\r\n            }\r\n        }\r\n    }], [\"catch\", (f) => {\r\n        try {\r\n            return generator().catch(f);\r\n        }\r\n        catch (er_2) {\r\n            try {\r\n                const x_4 = Promise.resolve(f(er_2));\r\n                return x_4;\r\n            }\r\n            catch (er_3) {\r\n                const x_5 = Promise.reject(er_3);\r\n                return x_5;\r\n            }\r\n        }\r\n    }]]));\r\n    return x_6;\r\n}\r\n\r\nexport function PromiseBuilder__Run_212F1D4B(x, p) {\r\n    return new Promise(((success, fail) => {\r\n        try {\r\n            let p_1;\r\n            const x_1 = Promise.resolve(p);\r\n            p_1 = x_1;\r\n            p_1.then(success, fail);\r\n        }\r\n        catch (er) {\r\n            fail(er);\r\n        }\r\n    }));\r\n}\r\n\r\nexport function PromiseBuilder__Using_74F7E79D(x, resource, binder) {\r\n    return PromiseBuilder__TryFinally_7D49A2FD(x, binder(resource), () => {\r\n        let copyOfStruct = resource;\r\n        copyOfStruct.Dispose();\r\n    });\r\n}\r\n\r\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\nimport { map } from \"./Seq.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { Record, Union } from \"../fable-library.3.0.0-nagareyama-rc-007/Types.js\";\r\nimport { int32_type, obj_type, record_type, option_type, bool_type, list_type, class_type, string_type, union_type } from \"../fable-library.3.0.0-nagareyama-rc-007/Reflection.js\";\r\n\r\nexport class HttpMethod extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"HEAD\", \"OPTIONS\"];\r\n    }\r\n}\r\n\r\nexport function HttpMethod$reflection() {\r\n    return union_type(\"Fable.SimpleHttp.HttpMethod\", [], HttpMethod, () => [[], [], [], [], [], [], []]);\r\n}\r\n\r\nexport class Header extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Header\"];\r\n    }\r\n}\r\n\r\nexport function Header$reflection() {\r\n    return union_type(\"Fable.SimpleHttp.Header\", [], Header, () => [[[\"Item1\", string_type], [\"Item2\", string_type]]]);\r\n}\r\n\r\nexport class BodyContent extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Empty\", \"Text\", \"Binary\", \"Form\"];\r\n    }\r\n}\r\n\r\nexport function BodyContent$reflection() {\r\n    return union_type(\"Fable.SimpleHttp.BodyContent\", [], BodyContent, () => [[], [[\"Item\", string_type]], [[\"Item\", class_type(\"Browser.Types.Blob\")]], [[\"Item\", class_type(\"Browser.Types.FormData\")]]]);\r\n}\r\n\r\nexport class ResponseTypes extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Text\", \"Blob\", \"ArrayBuffer\"];\r\n    }\r\n}\r\n\r\nexport function ResponseTypes$reflection() {\r\n    return union_type(\"Fable.SimpleHttp.ResponseTypes\", [], ResponseTypes, () => [[], [], []]);\r\n}\r\n\r\nexport class HttpRequest extends Record {\r\n    constructor(url, method, headers, withCredentials, overridenMimeType, overridenResponseType, content) {\r\n        super();\r\n        this.url = url;\r\n        this.method = method;\r\n        this.headers = headers;\r\n        this.withCredentials = withCredentials;\r\n        this.overridenMimeType = overridenMimeType;\r\n        this.overridenResponseType = overridenResponseType;\r\n        this.content = content;\r\n    }\r\n}\r\n\r\nexport function HttpRequest$reflection() {\r\n    return record_type(\"Fable.SimpleHttp.HttpRequest\", [], HttpRequest, () => [[\"url\", string_type], [\"method\", HttpMethod$reflection()], [\"headers\", list_type(Header$reflection())], [\"withCredentials\", bool_type], [\"overridenMimeType\", option_type(string_type)], [\"overridenResponseType\", option_type(ResponseTypes$reflection())], [\"content\", BodyContent$reflection()]]);\r\n}\r\n\r\nexport class ResponseContent extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Text\", \"Blob\", \"ArrayBuffer\", \"Unknown\"];\r\n    }\r\n}\r\n\r\nexport function ResponseContent$reflection() {\r\n    return union_type(\"Fable.SimpleHttp.ResponseContent\", [], ResponseContent, () => [[[\"Item\", string_type]], [[\"Item\", class_type(\"Browser.Types.Blob\")]], [[\"Item\", class_type(\"Fable.Core.JS.ArrayBuffer\")]], [[\"Item\", obj_type]]]);\r\n}\r\n\r\nexport class HttpResponse extends Record {\r\n    constructor(statusCode, responseText, responseType, responseHeaders, content) {\r\n        super();\r\n        this.statusCode = (statusCode | 0);\r\n        this.responseText = responseText;\r\n        this.responseType = responseType;\r\n        this.responseHeaders = responseHeaders;\r\n        this.content = content;\r\n    }\r\n}\r\n\r\nexport function HttpResponse$reflection() {\r\n    return record_type(\"Fable.SimpleHttp.HttpResponse\", [], HttpResponse, () => [[\"statusCode\", int32_type], [\"responseText\", string_type], [\"responseType\", string_type], [\"responseHeaders\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, string_type])], [\"content\", ResponseContent$reflection()]]);\r\n}\r\n\r\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\n\nexport function HashIdentity_FromFunctions(hash, eq) {\n    return {\n        Equals(x, y) {\n            return eq(x, y);\n        },\n        GetHashCode(x_1) {\n            return hash(x_1);\n        },\n    };\n}\n\nexport function HashIdentity_Structural() {\n    return HashIdentity_FromFunctions(structuralHash, equals);\n}\n\nexport function HashIdentity_Reference() {\n    return HashIdentity_FromFunctions(physicalHash, (e1, e2) => (e1 === e2));\n}\n\nexport function ComparisonIdentity_FromFunction(comparer) {\n    return {\n        Compare(x, y) {\n            return comparer(x, y);\n        },\n    };\n}\n\nexport function ComparisonIdentity_Structural() {\n    return ComparisonIdentity_FromFunction(compare);\n}\n\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { clear, int32ToString } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\nimport { sumBy } from \"./Seq.js\";\n\nexport class StringBuilder {\n    constructor(value, capacity) {\n        this.buf = [];\n        if (!isNullOrEmpty(value)) {\n            void (this.buf.push(value));\n        }\n    }\n    toString() {\n        const __ = this;\n        return join(\"\", __.buf);\n    }\n}\n\nexport function StringBuilder$reflection() {\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\n}\n\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\n    return new StringBuilder(value, capacity);\n}\n\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\n}\n\nexport function StringBuilder_$ctor_Z721C83C5(value) {\n    return StringBuilder_$ctor_Z18115A39(value, 16);\n}\n\nexport function StringBuilder_$ctor() {\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\n}\n\nexport function StringBuilder__Append_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    return x;\n}\n\nexport function StringBuilder__Append_244C7CD6(x, c) {\n    void (x.buf.push(c));\n    return x;\n}\n\nexport function StringBuilder__Append_Z524259A4(x, o) {\n    void (x.buf.push(int32ToString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_5E38073B(x, o) {\n    void (x.buf.push(o.toString()));\n    return x;\n}\n\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_4E60E31B(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_695F1130(x, cs) {\n    void (x.buf.push(cs.join('')));\n    return x;\n}\n\nexport function StringBuilder__Append_43A65C09(x, s) {\n    void (x.buf.push(toString(s)));\n    return x;\n}\n\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\n    void (x.buf.push(format(fmt, o)));\n    return x;\n}\n\nexport function StringBuilder__AppendLine(x) {\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__get_Length(x) {\n    return sumBy((str) => str.length, x.buf, {\n        GetZero: () => 0,\n        Add: (x_1, y) => (x_1 + y),\n    }) | 0;\n}\n\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\n    const str = toString(x);\n    return substring(str, firstIndex, length);\n}\n\nexport function StringBuilder__Clear(x) {\n    clear(x.buf);\n    return x;\n}\n\n","import { structuralHash, equals } from \"./Util.js\";\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        const value = StringBuilder__Append_Z721C83C5(builder, s);\n        void value;\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n        void undefined;\n    }, builder, format);\n}\n\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { value as value_2, some } from \"./Option.js\";\nimport { Record, List } from \"./Types.js\";\nimport { fold as fold_1 } from \"./List.js\";\nimport { structuralHash, partialApply, compare, equals, isArrayLike } from \"./Util.js\";\nimport { empty as empty_1, tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, toIterator, map as map_2, unfold, getEnumerator } from \"./Seq.js\";\nimport { join, format } from \"./String.js\";\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\nimport { Dictionary_$ctor_6623D9B3 } from \"./MutableMap.js\";\n\nexport class MapTreeLeaf$2 {\n    constructor(k, v) {\n        this.k = k;\n        this.v = v;\n    }\n}\n\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\n}\n\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\n    return new MapTreeLeaf$2(k, v);\n}\n\nexport function MapTreeLeaf$2__get_Key(_) {\n    return _.k;\n}\n\nexport function MapTreeLeaf$2__get_Value(_) {\n    return _.v;\n}\n\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\n    constructor(k, v, left, right, h) {\n        super(k, v);\n        this.left = left;\n        this.right = right;\n        this.h = h;\n    }\n}\n\nexport function MapTreeNode$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\n}\n\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\n    return new MapTreeNode$2(k, v, left, right, h);\n}\n\nexport function MapTreeNode$2__get_Left(_) {\n    return _.left;\n}\n\nexport function MapTreeNode$2__get_Right(_) {\n    return _.right;\n}\n\nexport function MapTreeNode$2__get_Height(_) {\n    return _.h;\n}\n\nexport function MapTreeModule_empty() {\n    return void 0;\n}\n\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\n    MapTreeModule_sizeAux:\n    while (true) {\n        const acc = acc_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_sizeAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_size(x) {\n    return MapTreeModule_sizeAux(0, x);\n}\n\nexport function MapTreeModule_mk(l, k, v, r) {\n    let hl;\n    const m = l;\n    if (m != null) {\n        const m2 = m;\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const m_1 = r;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\n    if (m_2 === 0) {\n        const arg0 = MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n        return arg0;\n    }\n    else {\n        const arg0_1 = MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\n        return arg0_1;\n    }\n}\n\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\n    let m_2, m2_2, m_3, m2_3;\n    let t1h;\n    const m = t1;\n    if (m != null) {\n        const m2 = m;\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const m_1 = t2;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = t2;\n        if (matchValue instanceof MapTreeNode$2) {\n            if ((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? (m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = MapTreeNode$2__get_Left(matchValue);\n                if (matchValue_1 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = t1;\n        if (matchValue_2 instanceof MapTreeNode$2) {\n            if ((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? (m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = MapTreeNode$2__get_Right(matchValue_2);\n                if (matchValue_3 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else {\n        return MapTreeModule_mk(t1, k, v, t2);\n    }\n}\n\nexport function MapTreeModule_add(comparer, k, v, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                const arg0_1 = MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n                return arg0_1;\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c < 0) {\n            const arg0_2 = MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\n            return arg0_2;\n        }\n        else if (c === 0) {\n            const arg0_3 = MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n            return arg0_3;\n        }\n        else {\n            const arg0_4 = MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\n            return arg0_4;\n        }\n    }\n    else {\n        const arg0 = MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n        return arg0;\n    }\n}\n\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_tryFind:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c === 0) {\n                return some(MapTreeLeaf$2__get_Value(m2));\n            }\n            else if (m2 instanceof MapTreeNode$2) {\n                comparer_mut = comparer;\n                k_mut = k;\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\n                continue MapTreeModule_tryFind;\n            }\n            else {\n                return void 0;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_find(comparer, k, m) {\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\n    if (matchValue == null) {\n        throw (new Error());\n    }\n    else {\n        const v = value_2(matchValue);\n        return v;\n    }\n}\n\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\n    if (f(k, v)) {\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\n    }\n    else {\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\n    }\n}\n\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\n    MapTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                let acc_2;\n                const m_1 = MapTreeNode$2__get_Right(m2);\n                acc_2 = MapTreeModule_partitionAux(comparer, f, m_1, acc[0], acc[1]);\n                let acc_3;\n                const k = MapTreeLeaf$2__get_Key(m2);\n                const v = MapTreeLeaf$2__get_Value(m2);\n                acc_3 = MapTreeModule_partition1(comparer, f, k, v, acc_2[0], acc_2[1]);\n                const m_2 = MapTreeNode$2__get_Left(m2);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = m_2;\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue MapTreeModule_partitionAux;\n            }\n            else {\n                const k_1 = MapTreeLeaf$2__get_Key(m2);\n                const v_1 = MapTreeLeaf$2__get_Value(m2);\n                return MapTreeModule_partition1(comparer, f, k_1, v_1, acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_partition(comparer, f, m) {\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\n}\n\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\n    if (f(k, v)) {\n        return MapTreeModule_add(comparer, k, v, acc);\n    }\n    else {\n        return acc;\n    }\n}\n\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\n    MapTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                acc_mut = acc_2;\n                continue MapTreeModule_filterAux;\n            }\n            else {\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_filter(comparer, f, m) {\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\n}\n\nexport function MapTreeModule_spliceOutSuccessor(m) {\n    let m_1;\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            if (m_1 = MapTreeNode$2__get_Left(m2), m_1 == null) {\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\n            }\n            else {\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\n            }\n        }\n        else {\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\n    }\n}\n\nexport function MapTreeModule_remove(comparer, k, m) {\n    let m_1, m_2;\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                if (m_1 = MapTreeNode$2__get_Left(m2), m_1 == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (m_2 = MapTreeNode$2__get_Right(m2), m_2 == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c === 0) {\n            return MapTreeModule_empty();\n        }\n        else {\n            return m;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_change(comparer, k, u, m) {\n    let m_1, m_2;\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_1 != null) {\n                    const v_1 = value_2(matchValue_1);\n                    const arg0_1 = MapTreeNode$2_$ctor_499A11FD(k, v_1, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n                    return arg0_1;\n                }\n                else if (m_1 = MapTreeNode$2__get_Left(m2), m_1 == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (m_2 = MapTreeNode$2__get_Right(m2), m_2 == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c_1 < 0) {\n                const matchValue_2 = u(void 0);\n                if (matchValue_2 != null) {\n                    const v_2 = value_2(matchValue_2);\n                    const arg0_2 = MapTreeNode$2_$ctor_499A11FD(k, v_2, MapTreeModule_empty(), m, 2);\n                    return arg0_2;\n                }\n                else {\n                    return m;\n                }\n            }\n            else if (c_1 === 0) {\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_3 != null) {\n                    const v_3 = value_2(matchValue_3);\n                    const arg0_3 = MapTreeLeaf$2_$ctor_5BDDA1(k, v_3);\n                    return arg0_3;\n                }\n                else {\n                    return MapTreeModule_empty();\n                }\n            }\n            else {\n                const matchValue_4 = u(void 0);\n                if (matchValue_4 != null) {\n                    const v_4 = value_2(matchValue_4);\n                    const arg0_4 = MapTreeNode$2_$ctor_499A11FD(k, v_4, m, MapTreeModule_empty(), 2);\n                    return arg0_4;\n                }\n                else {\n                    return m;\n                }\n            }\n        }\n    }\n    else {\n        const matchValue = u(void 0);\n        if (matchValue != null) {\n            const v = value_2(matchValue);\n            const arg0 = MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n            return arg0;\n        }\n        else {\n            return m;\n        }\n    }\n}\n\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (m2 instanceof MapTreeNode$2) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Left(m2);\n                    continue MapTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\n    MapTreeModule_iterOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_iterOpt;\n            }\n            else {\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iter(f, m) {\n    MapTreeModule_iterOpt(f, m);\n}\n\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\n    MapTreeModule_tryPickOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\n                if (matchValue == null) {\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                    if (matchValue_1 == null) {\n                        f_mut = f;\n                        m_mut = MapTreeNode$2__get_Right(m2);\n                        continue MapTreeModule_tryPickOpt;\n                    }\n                    else {\n                        return matchValue_1;\n                    }\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_tryPick(f, m) {\n    return MapTreeModule_tryPickOpt(f, m);\n}\n\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\n    MapTreeModule_existsOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_existsOpt;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_exists(f, m) {\n    return MapTreeModule_existsOpt(f, m);\n}\n\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\n    MapTreeModule_forallOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) ? f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)) : false) {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_forallOpt;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_forall(f, m) {\n    return MapTreeModule_forallOpt(f, m);\n}\n\nexport function MapTreeModule_map(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\n            const arg0 = MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n            return arg0;\n        }\n        else {\n            const arg0_1 = MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\n            return arg0_1;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapiOpt(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\n            const arg0 = MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n            return arg0;\n        }\n        else {\n            const arg0_1 = MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\n            return arg0_1;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapi(f, m) {\n    return MapTreeModule_mapiOpt(f, m);\n}\n\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\n    MapTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, m = m_mut, x = x_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                x_mut = x_2;\n                continue MapTreeModule_foldBackOpt;\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_foldBack(f, m, x) {\n    return MapTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\n    MapTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const x_1 = MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2));\n                const x_2 = f(x_1, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                f_mut = f;\n                x_mut = x_2;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_foldOpt;\n            }\n            else {\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_fold(f, x, m) {\n    return MapTreeModule_foldOpt(f, x, m);\n}\n\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\n    const foldFromTo = (f_1, m_1, x_1) => {\n        if (m_1 != null) {\n            const m2 = m_1;\n            if (m2 instanceof MapTreeNode$2) {\n                const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\n                const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\n                const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\n                const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\n                const x_4 = (cKeyHi < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Right(m2), x_3) : x_3;\n                return x_4;\n            }\n            else {\n                const cLoKey_1 = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\n                const cKeyHi_1 = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\n                const x_5 = ((cLoKey_1 <= 0) ? (cKeyHi_1 <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1) : x_1;\n                return x_5;\n            }\n        }\n        else {\n            return x_1;\n        }\n    };\n    if (comparer.Compare(lo, hi) === 1) {\n        return x;\n    }\n    else {\n        return foldFromTo(f, m, x);\n    }\n}\n\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\n}\n\nexport function MapTreeModule_toList(m) {\n    const loop = (m_1_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const m_1 = m_1_mut, acc = acc_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\n                    acc_mut = (new List([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc)));\n                    continue loop;\n                }\n                else {\n                    return new List([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(m, new List());\n}\n\nexport function MapTreeModule_toArray(m) {\n    let list;\n    list = MapTreeModule_toList(m);\n    return Array.from(list);\n}\n\nexport function MapTreeModule_ofList(comparer, l) {\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\n}\n\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    MapTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            comparer_mut = comparer;\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\n            e_mut = e;\n            continue MapTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_ofArray(comparer, arr) {\n    let res = MapTreeModule_empty();\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\n        const forLoopVar = arr[idx];\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\n    }\n    return res;\n}\n\nexport function MapTreeModule_ofSeq(comparer, c) {\n    if (isArrayLike(c)) {\n        return MapTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof List) {\n        return MapTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = getEnumerator(c);\n        try {\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport function MapTreeModule_copyToArray(m, arr, i) {\n    let j = i | 0;\n    MapTreeModule_iter((x, y) => {\n        arr[j] = [x, y];\n        j = (j + 1);\n    }, m);\n}\n\nexport class MapTreeModule_MapIterator$2 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\n}\n\nexport function MapTreeModule_collapseLHS(stack_mut) {\n    let arg0;\n    MapTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (stack.tail != null) {\n            const rest = stack.tail;\n            const m = stack.head;\n            if (m != null) {\n                const m2 = m;\n                if (m2 instanceof MapTreeNode$2) {\n                    stack_mut = (new List(MapTreeNode$2__get_Left(m2), new List((arg0 = MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), (arg0)), new List(MapTreeNode$2__get_Right(m2), rest))));\n                    continue MapTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue MapTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return new List();\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_mkIterator(m) {\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(new List(m, new List())), false);\n}\n\nexport function MapTreeModule_notStarted() {\n    throw (new Error(\"enumeration not started\"));\n}\n\nexport function MapTreeModule_alreadyFinished() {\n    throw (new Error(\"enumeration already finished\"));\n}\n\nexport function MapTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const m = matchValue.head;\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n                }\n                else {\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n            }\n        }\n        else {\n            return MapTreeModule_alreadyFinished();\n        }\n    }\n    else {\n        return MapTreeModule_notStarted();\n    }\n}\n\nexport function MapTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const m = matchValue.head;\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = MapTreeModule_collapseLHS(matchValue.tail);\n                    return !(i.stack.tail == null);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !(i.stack.tail == null);\n    }\n}\n\nexport function MapTreeModule_mkIEnumerator(m) {\n    let i = MapTreeModule_mkIterator(m);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return MapTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = MapTreeModule_mkIterator(m);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function MapTreeModule_toSeq(s) {\n    const en = MapTreeModule_mkIEnumerator(s);\n    return unfold((en_1) => {\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\n        }\n        else {\n            return void 0;\n        }\n    }, en);\n}\n\nexport class FSharpMap {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpMap__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        if (that instanceof FSharpMap) {\n            const e1 = getEnumerator(this$);\n            try {\n                const e2 = getEnumerator(that);\n                try {\n                    const loop = () => {\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                        const m2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n                        if (m1 === m2) {\n                            if (!m1) {\n                                return true;\n                            }\n                            else {\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                if (equals(e1c[0], e2c[0]) ? equals(e1c[1], e2c[1]) : false) {\n                                    return loop();\n                                }\n                                else {\n                                    return false;\n                                }\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    };\n                    return loop();\n                }\n                finally {\n                    e2.Dispose();\n                }\n            }\n            finally {\n                e1.Dispose();\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    toString() {\n        const this$ = this;\n        let str;\n        let strings;\n        strings = map_2((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$);\n        str = join(\"; \", strings);\n        return (\"map [\" + str) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpMap\";\n    }\n    GetEnumerator() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    CompareTo(obj) {\n        const m = this;\n        if (obj instanceof FSharpMap) {\n            return compareWith((kvp1, kvp2) => {\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\n            }, m, obj) | 0;\n        }\n        else {\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        void x;\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        void x;\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, x[0]) ? equals(FSharpMap__get_Item(m, x[0]), x[1]) : false;\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const m = this;\n        MapTreeModule_copyToArray(m.tree, arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    get size() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    clear() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    delete(_arg1) {\n        throw (new Error(\"Map cannot be mutated\"));\n        return false;\n    }\n    entries() {\n        const m = this;\n        return map_2((p) => [p[0], p[1]], m);\n    }\n    get(k) {\n        const m = this;\n        return FSharpMap__get_Item(m, k);\n    }\n    has(k) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, k);\n    }\n    keys() {\n        const m = this;\n        return map_2((p) => p[0], m);\n    }\n    set(k, v) {\n        const m = this;\n        throw (new Error(\"Map cannot be mutated\"));\n        return m;\n    }\n    values() {\n        const m = this;\n        return map_2((p) => p[1], m);\n    }\n    forEach(f, thisArg) {\n        const m = this;\n        iterate_1((p) => {\n            const clo1 = partialApply(2, f, [p[1]]);\n            const clo2 = clo1(p[0]);\n            clo2(m);\n        }, m);\n    }\n}\n\nexport function FSharpMap$reflection(gen0, gen1) {\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\n}\n\nexport function FSharpMap_$ctor(comparer, tree) {\n    return new FSharpMap(comparer, tree);\n}\n\n(() => {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    FSharpMap.empty = FSharpMap_$ctor(comparer, MapTreeModule_empty());\n})();\n\nexport function FSharpMap_get_Empty() {\n    return FSharpMap.empty;\n}\n\nexport function FSharpMap_Create(ie) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\n}\n\nexport function FSharpMap__get_Comparer(m) {\n    return m.comparer;\n}\n\nexport function FSharpMap__get_Tree(m) {\n    return m.tree;\n}\n\nexport function FSharpMap__Add(m, key, value) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\n}\n\nexport function FSharpMap__Change(m, key, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\n}\n\nexport function FSharpMap__get_IsEmpty(m) {\n    return m.tree == null;\n}\n\nexport function FSharpMap__get_Item(m, key) {\n    return MapTreeModule_find(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__TryPick(m, f) {\n    return MapTreeModule_tryPick(f, m.tree);\n}\n\nexport function FSharpMap__Exists(m, predicate) {\n    return MapTreeModule_exists(predicate, m.tree);\n}\n\nexport function FSharpMap__Filter(m, predicate) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\n}\n\nexport function FSharpMap__ForAll(m, predicate) {\n    return MapTreeModule_forall(predicate, m.tree);\n}\n\nexport function FSharpMap__Fold(m, f, acc) {\n    return MapTreeModule_foldBack(f, m.tree, acc);\n}\n\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\n}\n\nexport function FSharpMap__Iterate(m, f) {\n    MapTreeModule_iter(f, m.tree);\n}\n\nexport function FSharpMap__MapRange(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\n}\n\nexport function FSharpMap__Map(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\n}\n\nexport function FSharpMap__Partition(m, predicate) {\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\n}\n\nexport function FSharpMap__get_Count(m) {\n    return MapTreeModule_size(m.tree);\n}\n\nexport function FSharpMap__ContainsKey(m, key) {\n    return MapTreeModule_mem(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__Remove(m, key) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\n}\n\nexport function FSharpMap__TryGetValue(__, key, value) {\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\n    if (matchValue == null) {\n        return false;\n    }\n    else {\n        const v = value_2(matchValue);\n        value.contents = v;\n        return true;\n    }\n}\n\nexport function FSharpMap__TryFind(m, key) {\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__ToList(m) {\n    return MapTreeModule_toList(m.tree);\n}\n\nexport function FSharpMap__ToArray(m) {\n    return MapTreeModule_toArray(m.tree);\n}\n\nexport function FSharpMap__ComputeHashCode(this$) {\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const activePatternResult4281 = forLoopVar;\n            res = combineHash(res, structuralHash(activePatternResult4281[0]));\n            res = combineHash(res, structuralHash(activePatternResult4281[1]));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return res | 0;\n}\n\nexport function isEmpty(table) {\n    return FSharpMap__get_IsEmpty(table);\n}\n\nexport function add(key, value, table) {\n    return FSharpMap__Add(table, key, value);\n}\n\nexport function change(key, f, table) {\n    return FSharpMap__Change(table, key, f);\n}\n\nexport function find(key, table) {\n    return FSharpMap__get_Item(table, key);\n}\n\nexport function tryFind(key, table) {\n    return FSharpMap__TryFind(table, key);\n}\n\nexport function remove(key, table) {\n    return FSharpMap__Remove(table, key);\n}\n\nexport function containsKey(key, table) {\n    return FSharpMap__ContainsKey(table, key);\n}\n\nexport function iterate(action, table) {\n    FSharpMap__Iterate(table, action);\n}\n\nexport function tryPick(chooser, table) {\n    return FSharpMap__TryPick(table, chooser);\n}\n\nexport function pick(chooser, table) {\n    const matchValue = tryPick(chooser, table);\n    if (matchValue != null) {\n        const res = value_2(matchValue);\n        return res;\n    }\n    else {\n        throw (new Error());\n    }\n}\n\nexport function exists(predicate, table) {\n    return FSharpMap__Exists(table, predicate);\n}\n\nexport function filter(predicate, table) {\n    return FSharpMap__Filter(table, predicate);\n}\n\nexport function partition(predicate, table) {\n    return FSharpMap__Partition(table, predicate);\n}\n\nexport function forAll(predicate, table) {\n    return FSharpMap__ForAll(table, predicate);\n}\n\nexport function map(mapping, table) {\n    return FSharpMap__Map(table, mapping);\n}\n\nexport function fold(folder, state, table) {\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\n}\n\nexport function foldBack(folder, table, state) {\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\n}\n\nexport function toSeq(table) {\n    return map_2((kvp) => [kvp[0], kvp[1]], table);\n}\n\nexport function findKey(predicate, table) {\n    return pick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function tryFindKey(predicate, table) {\n    return tryPick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function ofList(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofSeq(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofArray(elements) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\n}\n\nexport function toList(table) {\n    return FSharpMap__ToList(table);\n}\n\nexport function toArray(table) {\n    return FSharpMap__ToArray(table);\n}\n\nexport function empty() {\n    return FSharpMap_get_Empty();\n}\n\nexport function createMutable(source, comparer) {\n    const map_1 = Dictionary_$ctor_6623D9B3(source, comparer);\n    return map_1;\n}\n\nexport function groupBy(projection, xs, comparer) {\n    const dict = createMutable(empty_1(), comparer);\n    const enumerator = getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const key = projection(v);\n            if (dict.has(key)) {\n                void (dict.get(key).push(v));\n            }\n            else {\n                const value = dict.set(key, [v]);\n                void value;\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    const source = dict.entries();\n    return map_2((tupledArg) => [tupledArg[0], tupledArg[1]], source);\n}\n\nexport function countBy(projection, xs, comparer) {\n    const dict = createMutable(empty_1(), comparer);\n    const enumerator = getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const value = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const key = projection(value);\n            const value_1 = dict.has(key) ? dict.set(key, dict.get(key) + 1) : dict.set(key, 1);\n            void value_1;\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return dict.entries();\n}\n\nexport function count(table) {\n    return FSharpMap__get_Count(table);\n}\n\n","import { fromContinuations } from \"../fable-library.3.0.0-nagareyama-rc-007/Async.js\";\r\nimport { HttpResponse, ResponseContent, HttpRequest, BodyContent, HttpMethod, Header } from \"./Types.fs.js\";\r\nimport { ofArray, singleton, append, empty } from \"../fable-library.3.0.0-nagareyama-rc-007/List.js\";\r\nimport { ofArray as ofArray_1, empty as empty_1 } from \"../fable-library.3.0.0-nagareyama-rc-007/Map.js\";\r\nimport { join, split, isNullOrEmpty } from \"../fable-library.3.0.0-nagareyama-rc-007/String.js\";\r\nimport { choose } from \"../fable-library.3.0.0-nagareyama-rc-007/Array.js\";\r\nimport { getEnumerator } from \"../fable-library.3.0.0-nagareyama-rc-007/Seq.js\";\r\nimport { some } from \"../fable-library.3.0.0-nagareyama-rc-007/Option.js\";\r\nimport { singleton as singleton_1 } from \"../fable-library.3.0.0-nagareyama-rc-007/AsyncBuilder.js\";\r\n\r\nexport function FileReader_readBlobAsText(blob) {\r\n    return fromContinuations((tupledArg) => {\r\n        const reader = new FileReader();\r\n        reader.onload = ((_arg1) => {\r\n            if (reader.readyState === 2) {\r\n                tupledArg[0](reader.result);\r\n            }\r\n        });\r\n        reader.readAsText(blob);\r\n    });\r\n}\r\n\r\nexport function FileReader_readFileAsText(file) {\r\n    return fromContinuations((tupledArg) => {\r\n        const reader = new FileReader();\r\n        reader.onload = ((_arg1) => {\r\n            if (reader.readyState === 2) {\r\n                tupledArg[0](reader.result);\r\n            }\r\n        });\r\n        reader.readAsText(file);\r\n    });\r\n}\r\n\r\nexport function FormData_append(key, value, form) {\r\n    form.append(key, value);\r\n    return form;\r\n}\r\n\r\nexport function FormData_appendFile(key, file, form) {\r\n    form.append(key, file);\r\n    return form;\r\n}\r\n\r\nexport function FormData_appendNamedFile(key, fileName, file, form) {\r\n    form.append(key, file, fileName);\r\n    return form;\r\n}\r\n\r\nexport function FormData_appendBlob(key, blob, form) {\r\n    form.append(key, blob);\r\n    return form;\r\n}\r\n\r\nexport function FormData_appendNamedBlob(key, fileName, blob, form) {\r\n    form.append(key, blob, fileName);\r\n    return form;\r\n}\r\n\r\nexport function Headers_contentType(value) {\r\n    return new Header(0, \"Content-Type\", value);\r\n}\r\n\r\nexport function Headers_accept(value) {\r\n    return new Header(0, \"Accept\", value);\r\n}\r\n\r\nexport function Headers_acceptCharset(value) {\r\n    return new Header(0, \"Accept-Charset\", value);\r\n}\r\n\r\nexport function Headers_acceptEncoding(value) {\r\n    return new Header(0, \"Accept-Encoding\", value);\r\n}\r\n\r\nexport function Headers_acceptLanguage(value) {\r\n    return new Header(0, \"Accept-Language\", value);\r\n}\r\n\r\nexport function Headers_acceptDateTime(value) {\r\n    return new Header(0, \"Accept-Datetime\", value);\r\n}\r\n\r\nexport function Headers_authorization(value) {\r\n    return new Header(0, \"Authorization\", value);\r\n}\r\n\r\nexport function Headers_cacheControl(value) {\r\n    return new Header(0, \"Cache-Control\", value);\r\n}\r\n\r\nexport function Headers_connection(value) {\r\n    return new Header(0, \"Connection\", value);\r\n}\r\n\r\nexport function Headers_cookie(value) {\r\n    return new Header(0, \"Cookie\", value);\r\n}\r\n\r\nexport function Headers_contentMD5(value) {\r\n    return new Header(0, \"Content-MD5\", value);\r\n}\r\n\r\nexport function Headers_date(value) {\r\n    return new Header(0, \"Date\", value);\r\n}\r\n\r\nexport function Headers_expect(value) {\r\n    return new Header(0, \"Expect\", value);\r\n}\r\n\r\nexport function Headers_ifMatch(value) {\r\n    return new Header(0, \"If-Match\", value);\r\n}\r\n\r\nexport function Headers_ifModifiedSince(value) {\r\n    return new Header(0, \"If-Modified-Since\", value);\r\n}\r\n\r\nexport function Headers_ifNoneMatch(value) {\r\n    return new Header(0, \"If-None-Match\", value);\r\n}\r\n\r\nexport function Headers_ifRange(value) {\r\n    return new Header(0, \"If-Range\", value);\r\n}\r\n\r\nexport function Headers_IfUnmodifiedSince(value) {\r\n    return new Header(0, \"If-Unmodified-Since\", value);\r\n}\r\n\r\nexport function Headers_maxForwards(value) {\r\n    return new Header(0, \"Max-Forwards\", value);\r\n}\r\n\r\nexport function Headers_origin(value) {\r\n    return new Header(0, \"Origin\", value);\r\n}\r\n\r\nexport function Headers_pragma(value) {\r\n    return new Header(0, \"Pragma\", value);\r\n}\r\n\r\nexport function Headers_proxyAuthorization(value) {\r\n    return new Header(0, \"Proxy-Authorization\", value);\r\n}\r\n\r\nexport function Headers_range(value) {\r\n    return new Header(0, \"Range\", value);\r\n}\r\n\r\nexport function Headers_referer(value) {\r\n    return new Header(0, \"Referer\", value);\r\n}\r\n\r\nexport function Headers_userAgent(value) {\r\n    return new Header(0, \"User-Agent\", value);\r\n}\r\n\r\nexport function Headers_create(key, value) {\r\n    return new Header(0, key, value);\r\n}\r\n\r\nconst Http_defaultRequest = new HttpRequest(\"\", new HttpMethod(0), empty(), false, void 0, void 0, new BodyContent(0));\r\n\r\nconst Http_emptyResponse = new HttpResponse(0, \"\", \"\", empty_1(), new ResponseContent(0, \"\"));\r\n\r\nfunction Http_splitAt(delimiter, input) {\r\n    if (isNullOrEmpty(input)) {\r\n        return [input];\r\n    }\r\n    else {\r\n        return split(input, [delimiter], null, 0);\r\n    }\r\n}\r\n\r\nfunction Http_serializeMethod(_arg1) {\r\n    switch (_arg1.tag) {\r\n        case 1: {\r\n            return \"POST\";\r\n        }\r\n        case 3: {\r\n            return \"PATCH\";\r\n        }\r\n        case 2: {\r\n            return \"PUT\";\r\n        }\r\n        case 4: {\r\n            return \"DELETE\";\r\n        }\r\n        case 6: {\r\n            return \"OPTIONS\";\r\n        }\r\n        case 5: {\r\n            return \"HEAD\";\r\n        }\r\n        default: {\r\n            return \"GET\";\r\n        }\r\n    }\r\n}\r\n\r\nexport function Http_request(url) {\r\n    return new HttpRequest(url, Http_defaultRequest.method, Http_defaultRequest.headers, Http_defaultRequest.withCredentials, Http_defaultRequest.overridenMimeType, Http_defaultRequest.overridenResponseType, Http_defaultRequest.content);\r\n}\r\n\r\nexport function Http_method(httpVerb, req) {\r\n    return new HttpRequest(req.url, httpVerb, req.headers, req.withCredentials, req.overridenMimeType, req.overridenResponseType, req.content);\r\n}\r\n\r\nexport function Http_header(singleHeader, req) {\r\n    const headers = append(req.headers, singleton(singleHeader));\r\n    return new HttpRequest(req.url, req.method, headers, req.withCredentials, req.overridenMimeType, req.overridenResponseType, req.content);\r\n}\r\n\r\nexport function Http_headers(values, req) {\r\n    const headers = append(req.headers, values);\r\n    return new HttpRequest(req.url, req.method, headers, req.withCredentials, req.overridenMimeType, req.overridenResponseType, req.content);\r\n}\r\n\r\nexport function Http_withCredentials(enabled, req) {\r\n    return new HttpRequest(req.url, req.method, req.headers, enabled, req.overridenMimeType, req.overridenResponseType, req.content);\r\n}\r\n\r\nexport function Http_overrideMimeType(value, req) {\r\n    return new HttpRequest(req.url, req.method, req.headers, req.withCredentials, value, req.overridenResponseType, req.content);\r\n}\r\n\r\nexport function Http_overrideResponseType(value, req) {\r\n    return new HttpRequest(req.url, req.method, req.headers, req.withCredentials, req.overridenMimeType, value, req.content);\r\n}\r\n\r\nexport function Http_content(bodyContent, req) {\r\n    return new HttpRequest(req.url, req.method, req.headers, req.withCredentials, req.overridenMimeType, req.overridenResponseType, bodyContent);\r\n}\r\n\r\nexport function Http_send(req) {\r\n    return fromContinuations((tupledArg) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(Http_serializeMethod(req.method), req.url);\r\n        xhr.onreadystatechange = (() => {\r\n            let responseText, matchValue_1, statusCode, responseType, content, matchValue_2, elements, array, input;\r\n            if (xhr.readyState === 4) {\r\n                tupledArg[0]((responseText = (matchValue_1 = xhr.responseType, (matchValue_1 === \"\") ? xhr.responseText : ((matchValue_1 === \"text\") ? xhr.responseText : \"\")), (statusCode = (xhr.status | 0), (responseType = xhr.responseType, (content = (matchValue_2 = xhr.responseType, (matchValue_2 === \"\") ? (new ResponseContent(0, xhr.responseText)) : ((matchValue_2 === \"text\") ? (new ResponseContent(0, xhr.responseText)) : ((matchValue_2 === \"arraybuffer\") ? (new ResponseContent(2, xhr.response)) : ((matchValue_2 === \"blob\") ? (new ResponseContent(1, xhr.response)) : (new ResponseContent(3, xhr.response)))))), new HttpResponse(statusCode, responseText, responseType, (elements = (array = (input = xhr.getAllResponseHeaders(), (Http_splitAt(\"\\r\\n\", input))), (choose((headerLine) => {\r\n                    const parts = Http_splitAt(\":\", headerLine);\r\n                    const matchValue_3 = ofArray(parts);\r\n                    if (matchValue_3.tail != null) {\r\n                        return [matchValue_3.head.toLocaleLowerCase(), join(\":\", matchValue_3.tail).trim()];\r\n                    }\r\n                    else {\r\n                        return void 0;\r\n                    }\r\n                }, array))), (ofArray_1(elements))), content))))));\r\n            }\r\n        });\r\n        const enumerator = getEnumerator(req.headers);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                xhr.setRequestHeader(forLoopVar.fields[0], forLoopVar.fields[1]);\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        xhr.withCredentials = req.withCredentials;\r\n        const matchValue_4 = req.overridenMimeType;\r\n        if (matchValue_4 == null) {\r\n        }\r\n        else {\r\n            const mimeType = matchValue_4;\r\n            xhr.overrideMimeType(mimeType);\r\n        }\r\n        const matchValue_5 = req.overridenResponseType;\r\n        if (matchValue_5 == null) {\r\n        }\r\n        else if (matchValue_5.tag === 1) {\r\n            xhr.responseType = \"blob\";\r\n        }\r\n        else if (matchValue_5.tag === 2) {\r\n            xhr.responseType = \"arraybuffer\";\r\n        }\r\n        else {\r\n            xhr.responseType = \"text\";\r\n        }\r\n        const matchValue_6 = [req.method, req.content];\r\n        if (matchValue_6[0].tag === 0) {\r\n            xhr.send(some(void 0));\r\n        }\r\n        else if (matchValue_6[1].tag === 1) {\r\n            xhr.send(some(matchValue_6[1].fields[0]));\r\n        }\r\n        else if (matchValue_6[1].tag === 3) {\r\n            xhr.send(some(matchValue_6[1].fields[0]));\r\n        }\r\n        else if (matchValue_6[1].tag === 2) {\r\n            xhr.send(some(matchValue_6[1].fields[0]));\r\n        }\r\n        else {\r\n            xhr.send(some(void 0));\r\n        }\r\n    });\r\n}\r\n\r\nexport function Http_get(url) {\r\n    const builder$0040 = singleton_1;\r\n    return builder$0040.Delay(() => {\r\n        let req_1, req;\r\n        return builder$0040.Bind((req_1 = (req = Http_request(url), (Http_method(new HttpMethod(0), req))), (Http_send(req_1))), (_arg1) => {\r\n            const response = _arg1;\r\n            return builder$0040.Return([response.statusCode, response.responseText]);\r\n        });\r\n    });\r\n}\r\n\r\nexport function Http_put(url, data) {\r\n    const builder$0040 = singleton_1;\r\n    return builder$0040.Delay(() => {\r\n        let req_2, req_1, req;\r\n        return builder$0040.Bind((req_2 = (req_1 = (req = Http_request(url), (Http_method(new HttpMethod(2), req))), (Http_content(new BodyContent(1, data), req_1))), (Http_send(req_2))), (_arg1) => {\r\n            const response = _arg1;\r\n            return builder$0040.Return([response.statusCode, response.responseText]);\r\n        });\r\n    });\r\n}\r\n\r\nexport function Http_delete(url) {\r\n    const builder$0040 = singleton_1;\r\n    return builder$0040.Delay(() => {\r\n        let req_1, req;\r\n        return builder$0040.Bind((req_1 = (req = Http_request(url), (Http_method(new HttpMethod(4), req))), (Http_send(req_1))), (_arg1) => {\r\n            const response = _arg1;\r\n            return builder$0040.Return([response.statusCode, response.responseText]);\r\n        });\r\n    });\r\n}\r\n\r\nexport function Http_patch(url, data) {\r\n    const builder$0040 = singleton_1;\r\n    return builder$0040.Delay(() => {\r\n        let req_2, req_1, req;\r\n        return builder$0040.Bind((req_2 = (req_1 = (req = Http_request(url), (Http_method(new HttpMethod(3), req))), (Http_content(new BodyContent(1, data), req_1))), (Http_send(req_2))), (_arg1) => {\r\n            const response = _arg1;\r\n            return builder$0040.Return([response.statusCode, response.responseText]);\r\n        });\r\n    });\r\n}\r\n\r\nexport function Http_post(url, data) {\r\n    const builder$0040 = singleton_1;\r\n    return builder$0040.Delay(() => {\r\n        let req_2, req_1, req;\r\n        return builder$0040.Bind((req_2 = (req_1 = (req = Http_request(url), (Http_method(new HttpMethod(1), req))), (Http_content(new BodyContent(1, data), req_1))), (Http_send(req_2))), (_arg1) => {\r\n            const response = _arg1;\r\n            return builder$0040.Return([response.statusCode, response.responseText]);\r\n        });\r\n    });\r\n}\r\n\r\n","import { Record, Union } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/Types.js\";\r\nimport { record_type, int32_type, union_type, string_type } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/Reflection.js\";\r\n\r\nexport class Pages extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Login\", \"Profile\"];\r\n    }\r\n}\r\n\r\nexport function Pages$reflection() {\r\n    return union_type(\"Types.Pages\", [], Pages, () => [[], [[\"Item\", string_type]]]);\r\n}\r\n\r\nexport class Item extends Record {\r\n    constructor(Id, Nome, Qtd) {\r\n        super();\r\n        this.Id = (Id | 0);\r\n        this.Nome = Nome;\r\n        this.Qtd = (Qtd | 0);\r\n    }\r\n}\r\n\r\nexport function Item$reflection() {\r\n    return record_type(\"Types.Item\", [], Item, () => [[\"Id\", int32_type], [\"Nome\", string_type], [\"Qtd\", int32_type]]);\r\n}\r\n\r\n","import { singleton } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/AsyncBuilder.js\";\r\nimport { Http_get } from \"./.fable/Fable.SimpleHttp.3.0.0/Http.fs.js\";\r\nimport { interpolate, toText } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/String.js\";\r\nimport { map } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/Seq.js\";\r\nimport { Item } from \"./Types.fs.js\";\r\nimport { startAsPromise } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/Async.js\";\r\n\r\nexport function obterInvetario(username) {\r\n    let arg00;\r\n    const builder$0040 = singleton;\r\n    arg00 = builder$0040.Delay(() => builder$0040.Bind(Http_get(toText(interpolate(\"%P()/%P()\", [\"https://thunderfarm.azurewebsites.net/api/inventario/\", username]))), (_arg1) => {\r\n        const items = JSON.parse(_arg1[1]);\r\n        return builder$0040.Return((map((x) => (new Item(~(~((x[\"recurso\"])[\"id\"])), (x[\"recurso\"])[\"nome\"], ~(~(x[\"quantidade\"])))), items)));\r\n    }));\r\n    return startAsPromise(arg00);\r\n}\r\n\r\n","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"./ReactInterop.js\";\r\nimport { class_type } from \"../fable-library.3.0.0-nagareyama-rc-007/Reflection.js\";\r\nimport { iterate } from \"../fable-library.3.0.0-nagareyama-rc-007/Seq.js\";\r\nimport { defaultArg, toArray } from \"../fable-library.3.0.0-nagareyama-rc-007/Option.js\";\r\nimport { reactApi } from \"./Interop.fs.js\";\r\nimport { createObj, curry, uncurry } from \"../fable-library.3.0.0-nagareyama-rc-007/Util.js\";\r\nimport { useState } from \"react\";\r\nimport * as react from \"react\";\r\nimport { singleton } from \"../fable-library.3.0.0-nagareyama-rc-007/List.js\";\r\n\r\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\r\n\r\nexport const ReactInterop_useEffect = useEffect;\r\n\r\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\r\n\r\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\r\n\r\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\r\n\r\nexport class Internal {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Internal$reflection() {\r\n    return class_type(\"Feliz.Internal\", void 0, Internal);\r\n}\r\n\r\nexport function Internal_$ctor() {\r\n    return new Internal();\r\n}\r\n\r\n(() => {\r\n})();\r\n\r\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\r\n    iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, toArray(name));\r\n    return (props) => {\r\n        let props_2;\r\n        props_2 = Internal_propsWithKey(withKey, props);\r\n        return reactApi.createElement(renderElement, props_2);\r\n    };\r\n}\r\n\r\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\r\n    const memoElementType = reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\r\n    iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, toArray(name));\r\n    return (props) => {\r\n        let props_2;\r\n        props_2 = Internal_propsWithKey(withKey, props);\r\n        return reactApi.createElement(memoElementType, props_2);\r\n    };\r\n}\r\n\r\nfunction Internal_propsWithKey(withKey, props) {\r\n    if (withKey == null) {\r\n        return props;\r\n    }\r\n    else {\r\n        const f = withKey;\r\n        props.key = f(props);\r\n        return props;\r\n    }\r\n}\r\n\r\nexport class React {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function React$reflection() {\r\n    return class_type(\"Feliz.React\", void 0, React);\r\n}\r\n\r\nexport function React_createDisposable_3A5B6456(dispose) {\r\n    return {\r\n        Dispose() {\r\n            dispose();\r\n        },\r\n    };\r\n}\r\n\r\nexport function useReact_useState_FCFD9EF(initializer) {\r\n    return reactApi.useState(initializer);\r\n}\r\n\r\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\r\n    const arg00 = update;\r\n    return reactApi.useReducer(arg00, initialState);\r\n}\r\n\r\nexport function useReact_useEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useEffect(effect);\r\n}\r\n\r\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useLayoutEffect(effect);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\r\n    ReactInterop_useLayoutEffect((_arg1) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    });\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function useReact_useEffectOnce_3A5B6456(effect) {\r\n    useReact_useEffect_Z101E1A95(effect, []);\r\n}\r\n\r\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\r\n    useReact_useEffect_Z5234A374(effect, []);\r\n}\r\n\r\nexport function useReact_useEffectOnce_6E825304(effect) {\r\n    useReact_useEffect_Z5234A374(() => {\r\n        const disposeOption = effect();\r\n        return {\r\n            Dispose() {\r\n                iterate((d) => {\r\n                    let copyOfStruct = d;\r\n                    copyOfStruct.Dispose();\r\n                }, toArray(disposeOption));\r\n            },\r\n        };\r\n    }, []);\r\n}\r\n\r\nexport function useReact_useEffect_3A5B6456(effect) {\r\n    ReactInterop_useEffect((_arg3) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    });\r\n}\r\n\r\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps((_arg4) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function useReact_useDebugValue_Z721C83C5(value) {\r\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\r\n}\r\n\r\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\r\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\r\n}\r\n\r\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\r\n    const arg10 = defaultArg(dependencies, []);\r\n    return reactApi.useCallback(callbackFunction, arg10);\r\n}\r\n\r\nexport function useReact_useRef_1505(initialValue) {\r\n    return reactApi.useRef(initialValue);\r\n}\r\n\r\nexport function useReact_useInputRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useButtonRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useElementRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\r\n    const arg10 = defaultArg(dependencies, []);\r\n    return reactApi.useMemo(createFunction, arg10);\r\n}\r\n\r\nexport function React_functionComponent_2F9D7239(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\r\n}\r\n\r\nexport function React_functionComponent_19A12FB2(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => {\r\n        const arg00 = render(arg);\r\n        return react.createElement(react.Fragment, {}, ...arg00);\r\n    }, void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => {\r\n        const arg00 = render(arg);\r\n        return react.createElement(react.Fragment, {}, ...arg00);\r\n    }, name, withKey);\r\n}\r\n\r\nexport function React_memo_62A0F746(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => {\r\n        const arg00 = render(arg);\r\n        return react.createElement(react.Fragment, {}, ...arg00);\r\n    }, void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => {\r\n        const arg00 = render(arg);\r\n        return react.createElement(react.Fragment, {}, ...arg00);\r\n    }, name, areEqual, withKey);\r\n}\r\n\r\nexport function React_createContext_1AE444D8(name, defaultValue) {\r\n    const contextObject = reactApi.createContext(defaultArg(defaultValue, void 0));\r\n    iterate((name_1) => {\r\n        contextObject.displayName = name_1;\r\n    }, toArray(name));\r\n    return contextObject;\r\n}\r\n\r\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\r\n    return reactApi.createElement(contextObject.Provider, createObj(singleton([\"value\", contextValue])), child);\r\n}\r\n\r\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\r\n    return reactApi.createElement(contextObject.Provider, createObj(singleton([\"value\", contextValue])), ...children);\r\n}\r\n\r\nexport function React_contextConsumer_Z68910595(contextObject, render) {\r\n    return reactApi.createElement(contextObject.Consumer, null, render);\r\n}\r\n\r\nexport function React_contextConsumer_56D53A40(contextObject, render) {\r\n    return reactApi.createElement(contextObject.Consumer, null, (arg) => {\r\n        const arg00 = render(arg);\r\n        return react.createElement(react.Fragment, {}, ...arg00);\r\n    });\r\n}\r\n\r\nexport function useReact_useContext_37FA55CF(contextObject) {\r\n    return reactApi.useContext(contextObject);\r\n}\r\n\r\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\r\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\r\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\r\n    useReact_useLayoutEffect_3A5B6456(() => {\r\n        lastRenderCallbackRef.current = callback;\r\n    });\r\n    return callbackRef;\r\n}\r\n\r\nexport const React_useStateWithUpdater_1505 = useState;\r\n\r\nexport function React_forwardRef_3790D881(render) {\r\n    const forwardRefType = reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    return (tupledArg) => {\r\n        let o;\r\n        return reactApi.createElement(forwardRefType, (o = {\r\n            props: tupledArg[0],\r\n            ref: tupledArg[1],\r\n        }, (Object.assign({}, o))));\r\n    };\r\n}\r\n\r\nexport function React_forwardRef_7DC3DB1A(name, render) {\r\n    const forwardRefType = reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    render.displayName = name;\r\n    return (tupledArg) => {\r\n        let o;\r\n        return reactApi.createElement(forwardRefType, (o = {\r\n            props: tupledArg[0],\r\n            ref: tupledArg[1],\r\n        }, (Object.assign({}, o))));\r\n    };\r\n}\r\n\r\nexport function React_strictMode_6E3A73D(children) {\r\n    return reactApi.createElement(reactApi.StrictMode, void 0, ...children);\r\n}\r\n\r\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\r\n    return reactApi.createElement(reactApi.lazy((() => dynamicImport)), props);\r\n}\r\n\r\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\r\n    return reactApi.createElement(reactApi.lazy(dynamicImport), props);\r\n}\r\n\r\nexport function React_suspense_6E3A73D(children) {\r\n    let o;\r\n    return reactApi.createElement(reactApi.Suspense, (o = {\r\n        fallback: null,\r\n    }, (Object.assign({}, o))), ...children);\r\n}\r\n\r\nexport function React_suspense_Z3796A576(children, fallback) {\r\n    let o;\r\n    return reactApi.createElement(reactApi.Suspense, (o = {\r\n        fallback: fallback,\r\n    }, (Object.assign({}, o))), ...children);\r\n}\r\n\r\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\r\n    reactApi.useImperativeHandle(ref, createHandle);\r\n}\r\n\r\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\r\n    reactApi.useImperativeHandle(ref, createHandle, dependencies);\r\n}\r\n\r\nexport function useFeliz_React__React_useState_Static_1505(initial) {\r\n    return reactApi.useState(initial);\r\n}\r\n\r\n","import {\r\n    useEffect as useEffectReact,\r\n    useLayoutEffect as useLayoutEffectReact,\r\n    useDebugValue as useDebugValueReact } from 'react'\r\n\r\nexport const useEffect = getDisposable => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEffectWithDeps = (getDisposable, deps) => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useLayoutEffect = getDisposable => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","import { mkAttr, reactApi, reactElement } from \"./.fable/Feliz.1.17.0/Interop.fs.js\";\r\nimport { createObj } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/Util.js\";\r\nimport { empty, ofArray, singleton } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/List.js\";\r\nimport { empty as empty_1, sumBy, length, isEmpty, map } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/Seq.js\";\r\nimport { interpolate, toText } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/String.js\";\r\nimport { promise } from \"./.fable/Fable.Promise.2.1.0/PromiseImpl.fs.js\";\r\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"./.fable/Fable.Promise.2.1.0/Promise.fs.js\";\r\nimport { obterInvetario } from \"./Api.fs.js\";\r\nimport { useReact_useEffectOnce_3A5B6456, useFeliz_React__React_useState_Static_1505 } from \"./.fable/Feliz.1.17.0/React.fs.js\";\r\nimport * as react from \"react\";\r\n\r\nexport function linhaTabela(item) {\r\n    const children_6 = ofArray([reactElement(\"th\", createObj(singleton([\"children\", reactApi.Children.toArray([item.Id])]))), reactElement(\"td\", createObj(singleton([\"children\", reactApi.Children.toArray([item.Nome])]))), reactElement(\"td\", createObj(singleton([\"children\", reactApi.Children.toArray([item.Qtd])])))]);\r\n    return reactElement(\"tr\", createObj(singleton([\"children\", reactApi.Children.toArray(Array.from(children_6))])));\r\n}\r\n\r\nexport function tabelaRecursos(itens) {\r\n    let elems, children_10, children_8, children_6, children_4, children_12;\r\n    const xs = ofArray([mkAttr(\"className\", \"table\"), (elems = [(children_10 = singleton((children_8 = ofArray([reactElement(\"th\", createObj(singleton([\"children\", reactApi.Children.toArray([\"Id\"])]))), reactElement(\"th\", createObj(singleton([\"children\", reactApi.Children.toArray([\"Nome\"])]))), (children_6 = singleton((children_4 = ofArray([reactElement(\"title\", createObj(singleton([\"children\", [\"Quantidade\"]]))), \"Qtd\"]), reactElement(\"abbr\", createObj(singleton([\"children\", reactApi.Children.toArray(Array.from(children_4))]))))), reactElement(\"th\", createObj(singleton([\"children\", reactApi.Children.toArray(Array.from(children_6))]))))]), reactElement(\"tr\", createObj(singleton([\"children\", reactApi.Children.toArray(Array.from(children_8))]))))), reactElement(\"thead\", createObj(singleton([\"children\", reactApi.Children.toArray(Array.from(children_10))])))), (children_12 = map(linhaTabela, itens), reactElement(\"tbody\", createObj(singleton([\"children\", reactApi.Children.toArray(Array.from(children_12))]))))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems))))]);\r\n    return reactElement(\"table\", createObj(xs));\r\n}\r\n\r\nexport function renderRecursos(username, itens) {\r\n    let elems_16, xs_17, elems_15, xs_16, elems_14, xs_14, elems_13, xs_2, elems_1, xs_1, elems, xs, value_7, xs_4, elems_3, children, xs_3, xs_7, elems_6, xs_5, xs_6, xs_10, elems_9, xs_8, xs_9, xs_13, elems_12, xs_11, xs_12;\r\n    const games = ((isEmpty(itens)) ? 0 : 2) | 0;\r\n    let types;\r\n    types = length(itens);\r\n    let total;\r\n    total = sumBy((x) => x.Qtd, itens, {\r\n        GetZero: () => 0,\r\n        Add: (x_1, y) => (x_1 + y),\r\n    });\r\n    const xs_18 = ofArray([mkAttr(\"className\", \"columns\"), (elems_16 = [(xs_17 = ofArray([mkAttr(\"className\", \"container profile\"), (elems_15 = [(xs_16 = ofArray([mkAttr(\"className\", \"section profile-heading\"), (elems_14 = [(xs_14 = ofArray([mkAttr(\"className\", \"columns is-mobile is-multiline\"), (elems_13 = [(xs_2 = ofArray([mkAttr(\"className\", \"column is-2\"), (elems_1 = [(xs_1 = ofArray([mkAttr(\"className\", \"header-icon user-profile-image\"), (elems = [(xs = ofArray([mkAttr(\"alt\", \"\"), (value_7 = toText(interpolate(\"https://ui-avatars.com/api/?name=%P()\", [username])), mkAttr(\"src\", value_7))]), reactElement(\"img\", createObj(xs)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems))))]), reactElement(\"span\", createObj(xs_1)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_1))))]), reactElement(\"div\", createObj(xs_2))), (xs_4 = ofArray([mkAttr(\"className\", \"column is-4-tablet is-10-mobile name\"), (elems_3 = [(children = singleton((xs_3 = ofArray([mkAttr(\"className\", \"title is-bold\"), mkAttr(\"children\", reactApi.Children.toArray([username]))]), reactElement(\"span\", createObj(xs_3)))), reactElement(\"p\", createObj(singleton([\"children\", reactApi.Children.toArray(Array.from(children))]))))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_3))))]), reactElement(\"div\", createObj(xs_4))), (xs_7 = ofArray([mkAttr(\"className\", \"column is-2-tablet is-4-mobile has-text-centered\"), (elems_6 = [(xs_5 = ofArray([mkAttr(\"className\", \"stat-val\"), mkAttr(\"children\", reactApi.Children.toArray([games]))]), reactElement(\"p\", createObj(xs_5))), (xs_6 = ofArray([mkAttr(\"className\", \"stat-key\"), mkAttr(\"children\", reactApi.Children.toArray([\"Games\"]))]), reactElement(\"p\", createObj(xs_6)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_6))))]), reactElement(\"div\", createObj(xs_7))), (xs_10 = ofArray([mkAttr(\"className\", \"column is-2-tablet is-4-mobile has-text-centered\"), (elems_9 = [(xs_8 = ofArray([mkAttr(\"className\", \"stat-val\"), mkAttr(\"children\", reactApi.Children.toArray([types]))]), reactElement(\"p\", createObj(xs_8))), (xs_9 = ofArray([mkAttr(\"className\", \"stat-key\"), mkAttr(\"children\", reactApi.Children.toArray([\"Recursos\"]))]), reactElement(\"p\", createObj(xs_9)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_9))))]), reactElement(\"div\", createObj(xs_10))), (xs_13 = ofArray([mkAttr(\"className\", \"column is-2-tablet is-4-mobile has-text-centered\"), (elems_12 = [(xs_11 = ofArray([mkAttr(\"className\", \"stat-val\"), mkAttr(\"children\", reactApi.Children.toArray([total]))]), reactElement(\"p\", createObj(xs_11))), (xs_12 = ofArray([mkAttr(\"className\", \"stat-key\"), mkAttr(\"children\", reactApi.Children.toArray([\"Total\"]))]), reactElement(\"p\", createObj(xs_12)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_12))))]), reactElement(\"div\", createObj(xs_13)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_13))))]), reactElement(\"div\", createObj(xs_14))), reactElement(\"hr\", createObj(empty())), tabelaRecursos(itens)], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_14))))]), reactElement(\"div\", createObj(xs_16)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_15))))]), reactElement(\"div\", createObj(xs_17)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_16))))]);\r\n    return reactElement(\"div\", createObj(xs_18));\r\n}\r\n\r\nexport function loadItens(username, setItens) {\r\n    const builder$0040 = promise;\r\n    return PromiseBuilder__Run_212F1D4B(builder$0040, PromiseBuilder__Delay_62FBFDE1(builder$0040, () => (obterInvetario(username).then(((_arg1) => {\r\n        setItens(_arg1);\r\n        return Promise.resolve(undefined);\r\n    })))));\r\n}\r\n\r\nexport function Profile(profileProps) {\r\n    const username = profileProps.username;\r\n    const patternInput = useFeliz_React__React_useState_Static_1505(empty_1());\r\n    useReact_useEffectOnce_3A5B6456(() => {\r\n        const value = loadItens(username, patternInput[1]);\r\n        void value;\r\n    });\r\n    const xs = [renderRecursos(username, patternInput[0])];\r\n    return react.createElement(react.Fragment, {}, ...xs);\r\n}\r\n\r\n","import { reactApi, reactElement, mkAttr } from \"./.fable/Feliz.1.17.0/Interop.fs.js\";\r\nimport { ofSeq, cons, ofArray, singleton } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/List.js\";\r\nimport { Helpers_combineClasses } from \"./.fable/Feliz.Bulma.2.5.0/ElementBuilders.fs.js\";\r\nimport { createObj } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/Util.js\";\r\nimport { isNullOrWhiteSpace, join } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/String.js\";\r\nimport { useFeliz_React__React_useState_Static_1505 } from \"./.fable/Feliz.1.17.0/React.fs.js\";\r\nimport { empty, singleton as singleton_1, append, delay } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/Seq.js\";\r\n\r\nexport function usernameInput(username, setUser) {\r\n    let elems_2, props, xs_1, props_3, elems_1, props_1, typ, xs_3, props_2, elems, xs_4, xs_6, xs_8;\r\n    const xs_9 = ofArray([mkAttr(\"className\", \"field\"), (elems_2 = [(props = singleton(mkAttr(\"children\", \"Username\")), (xs_1 = Helpers_combineClasses(\"label\", props), reactElement(\"label\", createObj(xs_1)))), (props_3 = ofArray([mkAttr(\"className\", \"has-icons-left\"), (elems_1 = [(props_1 = ofArray([mkAttr(\"placeholder\", \"mariajoao90\"), mkAttr(\"required\", true), mkAttr(\"value\", username), mkAttr(\"onChange\", (ev) => {\r\n        setUser(ev.target.value);\r\n    })]), (typ = mkAttr(\"type\", \"text\"), (xs_3 = cons(typ, Helpers_combineClasses(\"input\", props_1)), reactElement(\"input\", createObj(xs_3))))), (props_2 = ofArray([mkAttr(\"className\", \"is-left\"), mkAttr(\"className\", \"is-small\"), (elems = [(xs_4 = singleton(mkAttr(\"className\", join(\" \", [\"fa\", \"fa-user\"]))), reactElement(\"i\", createObj(xs_4)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems))))]), (xs_6 = Helpers_combineClasses(\"icon\", props_2), reactElement(\"span\", createObj(xs_6))))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_1))))]), (xs_8 = Helpers_combineClasses(\"control\", props_3), reactElement(\"div\", createObj(xs_8))))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_2))))]);\r\n    return reactElement(\"div\", createObj(xs_9));\r\n}\r\n\r\nexport const passwordInput = (() => {\r\n    let elems_2, props, xs_1, props_3, elems_1, props_1, typ, xs_3, props_2, elems, xs_4, xs_6, xs_8;\r\n    const xs_9 = ofArray([mkAttr(\"className\", \"field\"), (elems_2 = [(props = singleton(mkAttr(\"children\", \"Senha\")), (xs_1 = Helpers_combineClasses(\"label\", props), reactElement(\"label\", createObj(xs_1)))), (props_3 = ofArray([mkAttr(\"className\", \"has-icons-left\"), (elems_1 = [(props_1 = ofArray([mkAttr(\"placeholder\", \"*******\"), mkAttr(\"required\", true)]), (typ = mkAttr(\"type\", \"password\"), (xs_3 = cons(typ, Helpers_combineClasses(\"input\", props_1)), reactElement(\"input\", createObj(xs_3))))), (props_2 = ofArray([mkAttr(\"className\", \"is-left\"), mkAttr(\"className\", \"is-small\"), (elems = [(xs_4 = singleton(mkAttr(\"className\", join(\" \", [\"fa\", \"fa-lock\"]))), reactElement(\"i\", createObj(xs_4)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems))))]), (xs_6 = Helpers_combineClasses(\"icon\", props_2), reactElement(\"span\", createObj(xs_6))))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_1))))]), (xs_8 = Helpers_combineClasses(\"control\", props_3), reactElement(\"div\", createObj(xs_8))))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_2))))]);\r\n    return reactElement(\"div\", createObj(xs_9));\r\n})();\r\n\r\nexport function form(login) {\r\n    let elems;\r\n    const userState = useFeliz_React__React_useState_Static_1505(\"\");\r\n    const patternInput = useFeliz_React__React_useState_Static_1505(false);\r\n    const setError = patternInput[1];\r\n    const xs_6 = ofArray([mkAttr(\"className\", \"box\"), (elems = ofSeq(delay(() => {\r\n        let props, xs_1;\r\n        return append(singleton_1((props = ofArray([mkAttr(\"className\", \"is-2\"), mkAttr(\"className\", \"has-text-dark\"), mkAttr(\"children\", \"PUJ Login\")]), (xs_1 = Helpers_combineClasses(\"title is-2\", props), reactElement(\"h2\", createObj(xs_1))))), delay(() => append(singleton_1(usernameInput(userState[0], userState[1])), delay(() => append(singleton_1(passwordInput), delay(() => {\r\n            let props_1, xs_3;\r\n            return append(patternInput[0] ? singleton_1((props_1 = ofArray([mkAttr(\"className\", \"is-danger\"), mkAttr(\"children\", \"Username invalido\")]), (xs_3 = Helpers_combineClasses(\"notification\", props_1), reactElement(\"div\", createObj(xs_3))))) : empty(), delay(() => {\r\n                let props_2, xs_5;\r\n                return singleton_1((props_2 = ofArray([mkAttr(\"className\", \"is-success\"), mkAttr(\"children\", \"Login\"), mkAttr(\"onClick\", (e) => {\r\n                    e.preventDefault();\r\n                    const user_1 = userState[0];\r\n                    if (isNullOrWhiteSpace(user_1)) {\r\n                        setError(true);\r\n                    }\r\n                    else {\r\n                        setError(false);\r\n                        login(user_1);\r\n                    }\r\n                })]), (xs_5 = Helpers_combineClasses(\"button\", props_2), reactElement(\"button\", createObj(xs_5)))));\r\n            }));\r\n        }))))));\r\n    })), mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems))))]);\r\n    return reactElement(\"form\", createObj(xs_6));\r\n}\r\n\r\n","import { reactElement, reactApi, mkAttr } from \"./.fable/Feliz.1.17.0/Interop.fs.js\";\r\nimport { join } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/String.js\";\r\nimport { singleton, ofArray } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/List.js\";\r\nimport { Helpers_combineClasses } from \"./.fable/Feliz.Bulma.2.5.0/ElementBuilders.fs.js\";\r\nimport { createObj } from \"./.fable/fable-library.3.0.0-nagareyama-rc-007/Util.js\";\r\nimport { createElement } from \"react\";\r\nimport { Profile } from \"./ProfilePage.fs.js\";\r\nimport { form } from \"./LoginPage.fs.js\";\r\nimport { useFeliz_React__React_useState_Static_1505 } from \"./.fable/Feliz.1.17.0/React.fs.js\";\r\nimport { Pages } from \"./Types.fs.js\";\r\n\r\nexport function MainContainer(mainContainerProps) {\r\n    let elems_5, xs_6, elems_4, xs_5, elems_3, xs_4, elems_2, props_1, elems_1, props, xs_1, xs_3;\r\n    const childComponent = mainContainerProps.childComponent;\r\n    const props_2 = ofArray([mkAttr(\"className\", join(\" \", [\"hero\", \"is-primary\", \"is-fullheight\"])), (elems_5 = [(xs_6 = ofArray([mkAttr(\"className\", join(\" \", [\"hero\", \"is-primary\", \"is-fullheight\"])), mkAttr(\"className\", \"hero-body\"), (elems_4 = [(xs_5 = ofArray([mkAttr(\"className\", \"hero-body\"), (elems_3 = [(xs_4 = ofArray([mkAttr(\"className\", \"container\"), (elems_2 = [(props_1 = ofArray([mkAttr(\"className\", \"is-centered\"), (elems_1 = [(props = ofArray([mkAttr(\"className\", \"is-9\"), mkAttr(\"children\", reactApi.Children.toArray([childComponent]))]), (xs_1 = Helpers_combineClasses(\"column\", props), reactElement(\"div\", createObj(xs_1))))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_1))))]), (xs_3 = Helpers_combineClasses(\"columns\", props_1), reactElement(\"div\", createObj(xs_3))))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_2))))]), reactElement(\"div\", createObj(xs_4)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_3))))]), reactElement(\"div\", createObj(xs_5)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_4))))]), reactElement(\"div\", createObj(xs_6)))], mkAttr(\"children\", reactApi.Children.toArray(Array.from(elems_5))))]);\r\n    const xs_8 = Helpers_combineClasses(\"section\", props_2);\r\n    return reactElement(\"section\", createObj(xs_8));\r\n}\r\n\r\nexport function Router(routerProps) {\r\n    const loginFn = routerProps.loginFn;\r\n    const _arg1 = routerProps._arg1;\r\n    if (_arg1.tag === 1) {\r\n        return createElement(Profile, {\r\n            username: _arg1.fields[0],\r\n        });\r\n    }\r\n    else {\r\n        return form(loginFn);\r\n    }\r\n}\r\n\r\nexport function Main() {\r\n    let childComponent;\r\n    const patternInput = useFeliz_React__React_useState_Static_1505(new Pages(0));\r\n    const children = singleton((childComponent = createElement(Router, {\r\n        loginFn: (arg) => {\r\n            patternInput[1]((new Pages(1, arg)));\r\n        },\r\n        _arg1: patternInput[0],\r\n    }), (createElement(MainContainer, {\r\n        childComponent: childComponent,\r\n    }))));\r\n    return reactElement(\"div\", createObj(singleton([\"children\", reactApi.Children.toArray(Array.from(children))])));\r\n}\r\n\r\n","import { render } from \"react-dom\";\r\nimport { createElement } from \"react\";\r\nimport { Main } from \"./Components.fs.js\";\r\nimport \"./styles/main.scss\";\r\n\r\n\r\nrender(createElement(Main, null), document.getElementById(\"feliz-app\"));\r\n\r\n"],"sourceRoot":""}